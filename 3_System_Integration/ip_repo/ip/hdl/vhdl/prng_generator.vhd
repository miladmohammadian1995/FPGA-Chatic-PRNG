-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity prng_generator is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_stream_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of prng_generator is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "prng_generator,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.436417,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=42,HLS_SYN_FF=4817,HLS_SYN_LUT=20862,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (45 downto 0) := "0000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (45 downto 0) := "0000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (45 downto 0) := "0000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (45 downto 0) := "0000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (45 downto 0) := "0000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (45 downto 0) := "0000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (45 downto 0) := "0001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (45 downto 0) := "0010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (45 downto 0) := "0100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (45 downto 0) := "1000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv95_1FC28F5C28F5 : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000111111100001010001111010111000010100011110101";
    constant ap_const_lv93_1FC28F5C28F5 : STD_LOGIC_VECTOR (92 downto 0) := "000000000000000000000000000000000000000000000000111111100001010001111010111000010100011110101";
    constant ap_const_lv94_1FC28F5C28F5 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000111111100001010001111010111000010100011110101";
    constant ap_const_lv64_4024000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000100100000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_85 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000101";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv43_0 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_2B : STD_LOGIC_VECTOR (11 downto 0) := "000000101011";
    constant ap_const_lv12_FD5 : STD_LOGIC_VECTOR (11 downto 0) := "111111010101";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_30 : STD_LOGIC_VECTOR (11 downto 0) := "000000110000";
    constant ap_const_lv48_FFFFFFFFFFFF : STD_LOGIC_VECTOR (47 downto 0) := "111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv29_1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv49_80000000000 : STD_LOGIC_VECTOR (48 downto 0) := "0000010000000000000000000000000000000000000000000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv48_80000000000 : STD_LOGIC_VECTOR (47 downto 0) := "000010000000000000000000000000000000000000000000";
    constant ap_const_lv48_40000000000 : STD_LOGIC_VECTOR (47 downto 0) := "000001000000000000000000000000000000000000000000";
    constant ap_const_lv48_F80000000000 : STD_LOGIC_VECTOR (47 downto 0) := "111110000000000000000000000000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal seed : STD_LOGIC_VECTOR (63 downto 0);
    signal n_bits : STD_LOGIC_VECTOR (31 downto 0);
    signal num_bits : STD_LOGIC_VECTOR (31 downto 0);
    signal out_stream_V_data_V_1_data_in : STD_LOGIC_VECTOR (7 downto 0);
    signal out_stream_V_data_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal out_stream_V_data_V_1_vld_in : STD_LOGIC;
    signal out_stream_V_data_V_1_vld_out : STD_LOGIC;
    signal out_stream_V_data_V_1_ack_in : STD_LOGIC;
    signal out_stream_V_data_V_1_ack_out : STD_LOGIC;
    signal out_stream_V_data_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal out_stream_V_data_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal out_stream_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal out_stream_V_data_V_1_sel : STD_LOGIC;
    signal out_stream_V_data_V_1_load_A : STD_LOGIC;
    signal out_stream_V_data_V_1_load_B : STD_LOGIC;
    signal out_stream_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal out_stream_V_keep_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_V_keep_V_1_vld_in : STD_LOGIC;
    signal out_stream_V_keep_V_1_vld_out : STD_LOGIC;
    signal out_stream_V_keep_V_1_ack_out : STD_LOGIC;
    signal out_stream_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_V_keep_V_1_sel : STD_LOGIC;
    signal out_stream_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_V_strb_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_V_strb_V_1_vld_in : STD_LOGIC;
    signal out_stream_V_strb_V_1_vld_out : STD_LOGIC;
    signal out_stream_V_strb_V_1_ack_out : STD_LOGIC;
    signal out_stream_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_V_strb_V_1_sel : STD_LOGIC;
    signal out_stream_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_V_last_V_1_vld_in : STD_LOGIC;
    signal out_stream_V_last_V_1_vld_out : STD_LOGIC;
    signal out_stream_V_last_V_1_ack_in : STD_LOGIC;
    signal out_stream_V_last_V_1_ack_out : STD_LOGIC;
    signal out_stream_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal out_stream_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal out_stream_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal out_stream_V_last_V_1_sel : STD_LOGIC;
    signal out_stream_V_last_V_1_load_A : STD_LOGIC;
    signal out_stream_V_last_V_1_load_B : STD_LOGIC;
    signal out_stream_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_stream_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal icmp_ln86_fu_5756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_fu_5797_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal tmp_96_reg_6755 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln53_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_fu_989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal icmp_ln109_reg_5908 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_295_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal reg_275 : STD_LOGIC_VECTOR (92 downto 0);
    signal ap_predicate_op152_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal r_V_4_reg_333 : STD_LOGIC_VECTOR (92 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal r_V_8_reg_408 : STD_LOGIC_VECTOR (92 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal grp_fu_296_p2 : STD_LOGIC_VECTOR (93 downto 0);
    signal r_V_6_reg_411 : STD_LOGIC_VECTOR (92 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal reg_554 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal num_bits_read_reg_5841 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_bits_read_reg_5850 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_2_fu_822_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal select_ln603_2_reg_5858 : STD_LOGIC_VECTOR (47 downto 0);
    signal or_ln603_2_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_2_reg_5863 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_5868 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln39_fu_883_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln39_reg_5873 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal select_ln603_3_fu_887_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal add_ln53_fu_910_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln53_reg_5883 : STD_LOGIC_VECTOR (31 downto 0);
    signal mask_fu_921_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mask_reg_5889 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_fu_941_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_reg_5897 : STD_LOGIC_VECTOR (48 downto 0);
    signal total_bits_fu_983_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_bits_reg_5902 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_reg_5922 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_new_V_21_fu_1004_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal x_new_V_21_reg_5927 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal p_Result_10_fu_1011_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_10_reg_5936 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln886_fu_1053_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln886_reg_5942 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln885_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_reg_5947 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_V_36_fu_1071_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_36_reg_5953 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln894_fu_1107_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_reg_5959 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_fu_1207_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_reg_5965 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln908_fu_1215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_reg_5970 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_fu_1221_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_reg_5975 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln729_fu_1337_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln924_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_reg_5985 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_1_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_1_reg_5990 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_37_fu_1410_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_37_reg_5995 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal p_Result_68_reg_6003 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_38_fu_1430_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_38_reg_6009 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal sub_ln894_1_fu_1466_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_1_reg_6015 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_1_fu_1566_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_1_reg_6021 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln908_1_fu_1574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_1_reg_6026 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_1_fu_1580_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_1_reg_6031 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln729_1_fu_1696_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln924_2_fu_1711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_2_reg_6041 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_3_fu_1717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_3_reg_6046 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_V_5_fu_1762_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal rhs_V_5_reg_6051 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_3_fu_1766_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_3_reg_6056 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_49_reg_6061 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_new_V_23_fu_1781_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal x_new_V_23_reg_6066 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal p_Result_27_fu_1788_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_6075 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln886_1_fu_1830_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln886_1_reg_6081 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln885_2_fu_1838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_2_reg_6086 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_V_39_fu_1848_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_39_reg_6092 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln894_2_fu_1884_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_2_reg_6098 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_2_fu_1984_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_2_reg_6104 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln908_2_fu_1992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_2_reg_6109 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_2_fu_1998_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_2_reg_6114 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln729_2_fu_2114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln924_4_fu_2129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_4_reg_6124 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_5_fu_2135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_5_reg_6129 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_40_fu_2187_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_40_reg_6134 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal p_Result_73_reg_6142 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_41_fu_2207_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_41_reg_6148 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal sub_ln894_3_fu_2243_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_3_reg_6154 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_3_fu_2343_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_3_reg_6160 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln908_3_fu_2351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_3_reg_6165 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_3_fu_2357_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_3_reg_6170 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln729_3_fu_2473_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal icmp_ln924_6_fu_2488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_6_reg_6180 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_7_fu_2494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_7_reg_6185 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_fu_2557_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal add_ln1192_reg_6190 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_10_fu_2568_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_10_reg_6196 : STD_LOGIC_VECTOR (48 downto 0);
    signal sub_ln703_fu_2624_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln703_reg_6201 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_63_reg_6207 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_new_V_25_fu_2639_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal x_new_V_25_reg_6212 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal p_Result_45_fu_2646_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_45_reg_6221 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln886_2_fu_2688_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln886_2_reg_6227 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln885_5_fu_2696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_5_reg_6232 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal tmp_V_44_fu_2706_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_44_reg_6238 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln894_5_fu_2742_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_5_reg_6244 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_5_fu_2842_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_5_reg_6250 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln908_5_fu_2850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_5_reg_6255 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_5_fu_2856_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_5_reg_6260 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln729_5_fu_2972_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal icmp_ln924_10_fu_2987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_10_reg_6270 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_11_fu_2993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_11_reg_6275 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_45_fu_3045_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_45_reg_6280 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal p_Result_81_reg_6288 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_46_fu_3065_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_46_reg_6294 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal sub_ln894_6_fu_3101_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_6_reg_6300 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_6_fu_3201_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_6_reg_6306 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln908_6_fu_3209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_6_reg_6311 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_6_fu_3215_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_6_reg_6316 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln729_6_fu_3331_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal icmp_ln924_12_fu_3346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_12_reg_6326 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_13_fu_3352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_13_reg_6331 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_V_6_fu_3397_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal rhs_V_6_reg_6336 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_13_fu_3401_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_13_reg_6341 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_72_reg_6346 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_new_V_27_fu_3416_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal x_new_V_27_reg_6351 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal p_Result_51_fu_3423_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_51_reg_6360 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln886_3_fu_3465_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln886_3_reg_6366 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln885_7_fu_3473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_7_reg_6371 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal tmp_V_47_fu_3483_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_47_reg_6377 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln894_7_fu_3519_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_7_reg_6383 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_7_fu_3619_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_7_reg_6389 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln908_7_fu_3627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_7_reg_6394 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_7_fu_3633_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_7_reg_6399 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln729_7_fu_3749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal icmp_ln924_14_fu_3764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_14_reg_6409 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_15_fu_3770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_15_reg_6414 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_48_fu_3822_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_48_reg_6419 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal p_Result_86_reg_6427 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_49_fu_3842_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_49_reg_6433 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal sub_ln894_8_fu_3878_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_8_reg_6439 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_8_fu_3978_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_8_reg_6445 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln908_8_fu_3986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_8_reg_6450 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_8_fu_3992_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_8_reg_6455 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln729_8_fu_4108_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal icmp_ln924_16_fu_4123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_16_reg_6465 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_17_fu_4129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_17_reg_6470 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_4_fu_4192_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal add_ln1192_4_reg_6475 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_20_fu_4203_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_20_reg_6481 : STD_LOGIC_VECTOR (48 downto 0);
    signal sub_ln703_3_fu_4259_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln703_3_reg_6486 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_86_reg_6492 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_new_V_29_fu_4274_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal x_new_V_29_reg_6497 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal p_Result_60_fu_4281_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_60_reg_6506 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln886_4_fu_4323_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln886_4_reg_6512 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln885_10_fu_4331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_10_reg_6517 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal tmp_V_52_fu_4341_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_52_reg_6523 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln894_10_fu_4377_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_10_reg_6529 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_s_fu_4477_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_s_reg_6535 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln908_10_fu_4485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_10_reg_6540 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_10_fu_4491_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_10_reg_6545 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln729_10_fu_4607_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal icmp_ln924_20_fu_4622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_20_reg_6555 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_21_fu_4628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_21_reg_6560 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_53_fu_4680_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_53_reg_6565 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal p_Result_94_reg_6573 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_42_fu_4695_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_42_reg_6579 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal p_Result_76_fu_4700_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_76_reg_6585 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_43_fu_4713_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_43_reg_6590 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln894_4_fu_4751_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_4_reg_6596 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_4_fu_4851_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_4_reg_6602 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln908_4_fu_4859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_4_reg_6607 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_4_fu_4865_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_4_reg_6612 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_50_fu_4869_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_50_reg_6617 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_89_fu_4874_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_89_reg_6623 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_51_fu_4887_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_51_reg_6628 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln894_9_fu_4925_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_9_reg_6634 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_9_fu_5025_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_9_reg_6640 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln908_9_fu_5033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_9_reg_6645 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_9_fu_5039_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_9_reg_6650 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_54_fu_5048_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_54_reg_6655 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln894_11_fu_5084_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_11_reg_6661 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_10_fu_5184_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln899_10_reg_6667 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln908_11_fu_5192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln908_11_reg_6672 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_11_fu_5198_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_11_reg_6677 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln729_4_fu_5314_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal icmp_ln924_8_fu_5329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_8_reg_6687 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_9_fu_5335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_9_reg_6692 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_18_fu_5468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_18_reg_6702 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_19_fu_5474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_19_reg_6707 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_22_fu_5607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_22_reg_6717 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_23_fu_5613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln924_23_reg_6722 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_log_iter4_V_fu_5700_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal x_log_iter4_V_reg_6727 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal val_fu_5745_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_reg_6732 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_fu_5750_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_reg_6737 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op1008_write_state44 : BOOLEAN;
    signal ap_block_state44_io : BOOLEAN;
    signal p_Result_97_fu_5774_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln92_fu_5791_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln92_reg_6750 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_reg_254 : STD_LOGIC_VECTOR (47 downto 0);
    signal total_bits_0_reg_263 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state45_io : BOOLEAN;
    signal b_0_in_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal bvh_d_index_fu_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_pos_fu_5785_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bytes_sent_1_fu_210 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_492_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_fu_214 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_294_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal sext_ln1192_fu_2574_p1 : STD_LOGIC_VECTOR (94 downto 0);
    signal sext_ln1192_1_fu_4209_p1 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_295_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1118_fu_932_p1 : STD_LOGIC_VECTOR (92 downto 0);
    signal sext_ln1118_2_fu_1757_p1 : STD_LOGIC_VECTOR (92 downto 0);
    signal sext_ln1118_4_fu_2563_p1 : STD_LOGIC_VECTOR (92 downto 0);
    signal sext_ln1118_8_fu_4198_p1 : STD_LOGIC_VECTOR (92 downto 0);
    signal grp_fu_296_p0 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_296_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal sext_ln1192_2_fu_2578_p1 : STD_LOGIC_VECTOR (93 downto 0);
    signal sext_ln1118_6_fu_3392_p1 : STD_LOGIC_VECTOR (92 downto 0);
    signal sext_ln1192_3_fu_4213_p1 : STD_LOGIC_VECTOR (93 downto 0);
    signal grp_fu_297_p0 : STD_LOGIC_VECTOR (48 downto 0);
    signal sext_ln1118_1_fu_1000_p1 : STD_LOGIC_VECTOR (140 downto 0);
    signal sext_ln1118_3_fu_1777_p1 : STD_LOGIC_VECTOR (140 downto 0);
    signal sext_ln1118_5_fu_2635_p1 : STD_LOGIC_VECTOR (140 downto 0);
    signal sext_ln1118_7_fu_3412_p1 : STD_LOGIC_VECTOR (140 downto 0);
    signal sext_ln1118_9_fu_4270_p1 : STD_LOGIC_VECTOR (140 downto 0);
    signal grp_fu_297_p1 : STD_LOGIC_VECTOR (92 downto 0);
    signal sext_ln1116_fu_995_p1 : STD_LOGIC_VECTOR (140 downto 0);
    signal sext_ln1116_1_fu_1772_p1 : STD_LOGIC_VECTOR (140 downto 0);
    signal sext_ln1116_4_fu_2630_p1 : STD_LOGIC_VECTOR (140 downto 0);
    signal sext_ln1116_5_fu_3407_p1 : STD_LOGIC_VECTOR (140 downto 0);
    signal sext_ln1116_8_fu_4265_p1 : STD_LOGIC_VECTOR (140 downto 0);
    signal grp_fu_456_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_456_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_462_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_467_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_297_p2 : STD_LOGIC_VECTOR (140 downto 0);
    signal grp_fu_294_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_532_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_522_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ireg_V_fu_564_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_580_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_594_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_11_fu_598_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_65_fu_606_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_64_fu_572_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_1_fu_610_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_fu_568_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_fu_590_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_630_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_642_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_648_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_654_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_616_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sext_ln581_fu_662_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_fu_688_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_692_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_38_fu_702_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_log_V_fu_672_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln604_fu_718_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal icmp_ln571_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_fu_722_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal x_log_V_2_fu_710_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal and_ln585_1_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_log_V_1_fu_698_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal and_ln582_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_fu_794_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal select_ln603_1_fu_808_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal or_ln603_1_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln39_fu_854_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_fu_859_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal icmp_ln39_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln39_1_fu_869_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal total_bytes_to_send_fu_875_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_op_fu_898_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal smax1266_neg_fu_903_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln53_fu_893_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln83_fu_916_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_V_fu_937_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal empty_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln86_fu_947_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal smax_fu_958_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln86_fu_965_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_20_fu_971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal umax_fu_976_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_558_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal trunc_ln851_fu_1029_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_1_fu_1019_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln851_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_fu_1039_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln851_fu_1045_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_V_fu_1066_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_s_fu_1077_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_66_fu_1087_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_1095_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_fu_1103_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_1113_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_1119_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_fu_1135_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_fu_1139_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_fu_1145_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln897_fu_1149_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_7_fu_1155_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal icmp_ln897_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_1_fu_1161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_1173_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_fu_1187_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_fu_1181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_fu_1167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_11_fu_1201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln908_fu_1228_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_fu_1233_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln908_fu_1237_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln908_fu_1246_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_fu_1225_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_1_fu_1251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_2_fu_1242_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_fu_1255_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_fu_1268_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_1_fu_1261_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_2_fu_1271_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_s_fu_1277_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_44_fu_1291_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln915_fu_1307_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_fu_1299_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_fu_1312_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_112_fu_1287_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_1318_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_67_fu_1325_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln5_fu_1342_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_ln924_fu_1364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_fu_1381_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal shl_ln_fu_1374_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal and_ln924_fu_1368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln885_fu_1392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_1_fu_1397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_new_V_3_fu_1386_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal select_ln924_fu_1403_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_4_fu_1425_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_2_fu_1436_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_69_fu_1446_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_1454_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_1_fu_1462_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_1_fu_1472_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_1478_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_1_fu_1494_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_1_fu_1498_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_1_fu_1504_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln897_1_fu_1508_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_15_fu_1514_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal icmp_ln897_2_fu_1488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_3_fu_1520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_1532_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_9_fu_1546_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_1_fu_1540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_1_fu_1554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_1_fu_1526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_fu_1560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln908_1_fu_1587_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_4_fu_1592_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln908_1_fu_1596_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln908_1_fu_1605_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_14_fu_1584_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_3_fu_1610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_6_fu_1601_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_1_fu_1614_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_1_fu_1627_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_19_fu_1620_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_24_fu_1630_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_3_fu_1636_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_48_fu_1650_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln915_1_fu_1666_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_1_fu_1658_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_1_fu_1671_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_113_fu_1646_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_1677_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_70_fu_1684_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln924_1_fu_1701_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_ln924_1_fu_1723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_2_fu_1727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_1_fu_1739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln924_fu_1733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_3_fu_1744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_log_iter0_V_fu_1750_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal trunc_ln851_1_fu_1806_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_4_fu_1796_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln851_1_fu_1810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_5_fu_1816_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln851_1_fu_1822_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_V_7_fu_1843_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_19_fu_1854_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_71_fu_1864_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_1872_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_2_fu_1880_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_2_fu_1890_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_1896_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_2_fu_1912_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_2_fu_1916_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_2_fu_1922_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln897_2_fu_1926_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_21_fu_1932_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal icmp_ln897_4_fu_1906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_5_fu_1938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_1950_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_fu_1964_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_2_fu_1958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_2_fu_1972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_2_fu_1944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_12_fu_1978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln908_2_fu_2005_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_8_fu_2010_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln908_2_fu_2014_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln908_2_fu_2023_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_39_fu_2002_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_5_fu_2028_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_10_fu_2019_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_2_fu_2032_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_2_fu_2045_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_44_fu_2038_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_49_fu_2048_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_8_fu_2054_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_53_fu_2068_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln915_2_fu_2084_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_2_fu_2076_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_2_fu_2089_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_114_fu_2064_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_2095_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_72_fu_2102_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln924_2_fu_2119_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_ln924_2_fu_2141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_1_fu_2158_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal shl_ln703_1_fu_2151_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal and_ln924_4_fu_2145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln885_1_fu_2169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_5_fu_2174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_new_V_7_fu_2163_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal select_ln924_2_fu_2180_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_10_fu_2202_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_30_fu_2213_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_74_fu_2223_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_2231_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_3_fu_2239_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_3_fu_2249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_fu_2255_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_3_fu_2271_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_3_fu_2275_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_3_fu_2281_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln897_3_fu_2285_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_33_fu_2291_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal icmp_ln897_6_fu_2265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_7_fu_2297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_2309_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_35_fu_2323_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_3_fu_2317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_3_fu_2331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_3_fu_2303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_13_fu_2337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln908_3_fu_2364_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_12_fu_2369_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln908_3_fu_2373_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln908_3_fu_2382_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_59_fu_2361_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_7_fu_2387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_14_fu_2378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_3_fu_2391_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_3_fu_2404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_60_fu_2397_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_61_fu_2407_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_4_fu_2413_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_57_fu_2427_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln915_3_fu_2443_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_3_fu_2435_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_3_fu_2448_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_115_fu_2423_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_2454_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_75_fu_2461_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln924_3_fu_2478_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_ln924_3_fu_2500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_6_fu_2504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_3_fu_2516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln924_1_fu_2510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_7_fu_2521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_log_iter1_V_fu_2527_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal lhs_V_fu_2534_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_6_fu_2538_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_7_fu_2548_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal sext_ln1116_2_fu_2544_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal sext_ln1116_3_fu_2553_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_548_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_37_fu_2592_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_2_fu_2600_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln850_fu_2608_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp1_V_fu_2582_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal shl_ln703_2_fu_2616_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal trunc_ln851_2_fu_2664_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_11_fu_2654_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln851_3_fu_2668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_12_fu_2674_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln851_3_fu_2680_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_V_16_fu_2701_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_8_fu_2712_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_79_fu_2722_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_2730_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_5_fu_2738_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_5_fu_2748_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_2754_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_5_fu_2770_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_5_fu_2774_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_5_fu_2780_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln897_5_fu_2784_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_43_fu_2790_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal icmp_ln897_10_fu_2764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_11_fu_2796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_2808_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_12_fu_2822_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_5_fu_2816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_5_fu_2830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_5_fu_2802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_15_fu_2836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln908_5_fu_2863_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_20_fu_2868_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln908_5_fu_2872_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln908_5_fu_2881_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_77_fu_2860_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_11_fu_2886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_22_fu_2877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_5_fu_2890_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_5_fu_2903_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_78_fu_2896_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_79_fu_2906_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_6_fu_2912_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_67_fu_2926_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln915_5_fu_2942_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_5_fu_2934_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_5_fu_2947_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_117_fu_2922_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_2953_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_80_fu_2960_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln924_5_fu_2977_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_ln924_5_fu_2999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_3_fu_3016_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal shl_ln703_3_fu_3009_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal and_ln924_10_fu_3003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln885_2_fu_3027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_11_fu_3032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_new_V_11_fu_3021_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal select_ln924_4_fu_3038_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_19_fu_3060_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_14_fu_3071_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_82_fu_3081_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_3089_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_6_fu_3097_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_6_fu_3107_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_3113_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_6_fu_3129_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_6_fu_3133_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_6_fu_3139_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln897_6_fu_3143_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_47_fu_3149_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal icmp_ln897_12_fu_3123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_13_fu_3155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_3167_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_17_fu_3181_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_6_fu_3175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_6_fu_3189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_6_fu_3161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_16_fu_3195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln908_6_fu_3222_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_24_fu_3227_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln908_6_fu_3231_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln908_6_fu_3240_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_82_fu_3219_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_13_fu_3245_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_25_fu_3236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_6_fu_3249_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_6_fu_3262_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_83_fu_3255_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_84_fu_3265_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_7_fu_3271_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_71_fu_3285_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln915_6_fu_3301_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_6_fu_3293_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_6_fu_3306_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_118_fu_3281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_3312_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_83_fu_3319_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln924_6_fu_3336_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_ln924_6_fu_3358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_12_fu_3362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_6_fu_3374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln924_3_fu_3368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_13_fu_3379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_log_iter2_V_fu_3385_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal trunc_ln851_3_fu_3441_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_14_fu_3431_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln851_4_fu_3445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_15_fu_3451_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln851_4_fu_3457_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_V_22_fu_3478_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_20_fu_3489_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_84_fu_3499_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_3507_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_7_fu_3515_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_7_fu_3525_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_fu_3531_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_7_fu_3547_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_7_fu_3551_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_7_fu_3557_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln897_7_fu_3561_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_50_fu_3567_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal icmp_ln897_14_fu_3541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_15_fu_3573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_3585_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_24_fu_3599_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_7_fu_3593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_7_fu_3607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_7_fu_3579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_17_fu_3613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln908_7_fu_3640_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_26_fu_3645_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln908_7_fu_3649_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln908_7_fu_3658_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_87_fu_3637_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_15_fu_3663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_27_fu_3654_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_7_fu_3667_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_7_fu_3680_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_88_fu_3673_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_89_fu_3683_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_10_fu_3689_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_76_fu_3703_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln915_7_fu_3719_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_7_fu_3711_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_7_fu_3724_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_119_fu_3699_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_3730_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_85_fu_3737_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln924_7_fu_3754_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_ln924_7_fu_3776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_4_fu_3793_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal shl_ln703_4_fu_3786_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal and_ln924_14_fu_3780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln885_3_fu_3804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_15_fu_3809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_new_V_15_fu_3798_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal select_ln924_6_fu_3815_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_25_fu_3837_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_26_fu_3848_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_87_fu_3858_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_3866_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_8_fu_3874_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_8_fu_3884_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_fu_3890_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_8_fu_3906_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_8_fu_3910_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_8_fu_3916_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln897_8_fu_3920_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_54_fu_3926_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal icmp_ln897_16_fu_3900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_17_fu_3932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_fu_3944_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_29_fu_3958_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_8_fu_3952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_8_fu_3966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_8_fu_3938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_18_fu_3972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln908_8_fu_3999_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_28_fu_4004_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln908_8_fu_4008_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln908_8_fu_4017_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_92_fu_3996_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_17_fu_4022_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_29_fu_4013_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_8_fu_4026_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_8_fu_4039_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_93_fu_4032_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_94_fu_4042_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_11_fu_4048_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_80_fu_4062_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln915_8_fu_4078_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_8_fu_4070_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_8_fu_4083_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_120_fu_4058_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_4089_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_88_fu_4096_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln924_8_fu_4113_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_ln924_8_fu_4135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_16_fu_4139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_8_fu_4151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln924_4_fu_4145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_17_fu_4156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_log_iter3_V_fu_4162_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal lhs_V_3_fu_4169_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_16_fu_4173_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_17_fu_4183_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal sext_ln1116_6_fu_4179_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal sext_ln1116_7_fu_4188_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Result_55_fu_4227_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_5_fu_4235_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln850_1_fu_4243_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp2_V_fu_4217_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal shl_ln703_5_fu_4251_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal trunc_ln851_4_fu_4299_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_21_fu_4289_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln851_6_fu_4303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_22_fu_4309_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln851_6_fu_4315_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_V_31_fu_4336_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_41_fu_4347_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_92_fu_4357_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_4365_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_10_fu_4373_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_10_fu_4383_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_fu_4389_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_10_fu_4405_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_10_fu_4409_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_10_fu_4415_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln897_10_fu_4419_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_59_fu_4425_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal icmp_ln897_20_fu_4399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_21_fu_4431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_fu_4443_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_44_fu_4457_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_10_fu_4451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_10_fu_4465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_10_fu_4437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_20_fu_4471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln908_10_fu_4498_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_32_fu_4503_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln908_10_fu_4507_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln908_10_fu_4516_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_102_fu_4495_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_21_fu_4521_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_33_fu_4512_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_10_fu_4525_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_10_fu_4538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_103_fu_4531_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_104_fu_4541_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_13_fu_4547_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_90_fu_4561_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln915_10_fu_4577_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_10_fu_4569_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_10_fu_4582_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_122_fu_4557_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_4588_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_93_fu_4595_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln924_s_fu_4612_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_ln924_10_fu_4634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_6_fu_4651_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal shl_ln703_6_fu_4644_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal and_ln924_20_fu_4638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln885_4_fu_4662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_21_fu_4667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_new_V_19_fu_4656_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal select_ln924_8_fu_4673_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_V_13_fu_4708_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_1_fu_4721_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_77_fu_4731_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_4739_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_4_fu_4747_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_4_fu_4757_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_4763_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_4_fu_4779_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_4_fu_4783_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_4_fu_4789_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln897_4_fu_4793_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_40_fu_4799_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal icmp_ln897_8_fu_4773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_9_fu_4805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_4817_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_fu_4831_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_4_fu_4825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_4_fu_4839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_4_fu_4811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_14_fu_4845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_28_fu_4882_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_34_fu_4895_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_90_fu_4905_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_4913_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_9_fu_4921_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_9_fu_4931_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_4937_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_9_fu_4953_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_9_fu_4957_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_9_fu_4963_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln897_9_fu_4967_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_57_fu_4973_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal icmp_ln897_18_fu_4947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_19_fu_4979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_4991_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_38_fu_5005_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_9_fu_4999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_9_fu_5013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_9_fu_4985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_19_fu_5019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_34_fu_5043_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_48_fu_5054_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_95_fu_5064_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_5072_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_11_fu_5080_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_11_fu_5090_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_92_fu_5096_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_11_fu_5112_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln897_11_fu_5116_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln897_11_fu_5122_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln897_11_fu_5126_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_62_fu_5132_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal icmp_ln897_22_fu_5106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_23_fu_5138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_fu_5150_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_52_fu_5164_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_11_fu_5158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_11_fu_5172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_11_fu_5144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_21_fu_5178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln908_4_fu_5205_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_16_fu_5210_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln908_4_fu_5214_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln908_4_fu_5223_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_72_fu_5202_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_9_fu_5228_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_18_fu_5219_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_4_fu_5232_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_4_fu_5245_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_73_fu_5238_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_74_fu_5248_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_5_fu_5254_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_62_fu_5268_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln915_4_fu_5284_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_4_fu_5276_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_4_fu_5289_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_116_fu_5264_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_5295_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_78_fu_5302_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln924_4_fu_5319_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal add_ln908_9_fu_5344_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_30_fu_5349_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln908_9_fu_5353_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln908_9_fu_5362_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_97_fu_5341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_19_fu_5367_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_31_fu_5358_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_9_fu_5371_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_9_fu_5384_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_98_fu_5377_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_99_fu_5387_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_12_fu_5393_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_85_fu_5407_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln915_9_fu_5423_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_9_fu_5415_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_9_fu_5428_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_121_fu_5403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_5434_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_91_fu_5441_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln924_9_fu_5458_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal add_ln908_11_fu_5483_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln908_34_fu_5488_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal lshr_ln908_11_fu_5492_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sub_ln908_11_fu_5501_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_107_fu_5480_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_23_fu_5506_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_35_fu_5497_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_11_fu_5510_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln911_11_fu_5523_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_108_fu_5516_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_109_fu_5526_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_15_fu_5532_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_94_fu_5546_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln915_11_fu_5562_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_11_fu_5554_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_11_fu_5567_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_123_fu_5542_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_fu_5573_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_96_fu_5580_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln924_10_fu_5597_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_ln924_4_fu_5619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_8_fu_5623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_4_fu_5635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln924_2_fu_5629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln924_9_fu_5646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_18_fu_5650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_9_fu_5662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln924_5_fu_5656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln924_11_fu_5673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_22_fu_5677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_11_fu_5689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln924_6_fu_5683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_23_fu_5694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln924_19_fu_5667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln565_2_fu_5711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln924_9_fu_5640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln565_3_fu_5722_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal I1_fu_5707_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal I3_fu_5725_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln82_fu_5733_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal I2_fu_5714_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal combined_fu_5739_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln86_fu_5756_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln89_fu_5761_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_V_fu_5766_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_11_fu_5770_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln92_fu_5791_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_456_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state46 : BOOLEAN;
    signal ap_block_state46_io : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (45 downto 0);

    component prng_generator_dcbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component prng_generator_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        seed : OUT STD_LOGIC_VECTOR (63 downto 0);
        n_bits : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_bits : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    prng_generator_control_s_axi_U : component prng_generator_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        seed => seed,
        n_bits => n_bits,
        num_bits => num_bits);

    prng_generator_dcbkb_U1 : component prng_generator_dcbkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_456_p0,
        din1 => grp_fu_456_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_456_opcode,
        dout => grp_fu_456_p2);

    prng_generator_dcbkb_U2 : component prng_generator_dcbkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_462_p0,
        din1 => ap_const_lv64_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_1,
        dout => grp_fu_462_p2);

    prng_generator_dcbkb_U3 : component prng_generator_dcbkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_467_p0,
        din1 => ap_const_lv64_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_1,
        dout => grp_fu_467_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    out_stream_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_stream_V_data_V_1_ack_out = ap_const_logic_1) and (out_stream_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        out_stream_V_data_V_1_sel_rd <= not(out_stream_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_stream_V_data_V_1_ack_in = ap_const_logic_1) and (out_stream_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        out_stream_V_data_V_1_sel_wr <= not(out_stream_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_stream_V_data_V_1_state = ap_const_lv2_2) and (out_stream_V_data_V_1_vld_in = ap_const_logic_0)) or ((out_stream_V_data_V_1_state = ap_const_lv2_3) and (out_stream_V_data_V_1_vld_in = ap_const_logic_0) and (out_stream_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    out_stream_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((out_stream_V_data_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0) and (out_stream_V_data_V_1_vld_in = ap_const_logic_1)) or ((out_stream_V_data_V_1_state = ap_const_lv2_1) and (out_stream_TREADY = ap_const_logic_0)))) then 
                    out_stream_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((out_stream_V_data_V_1_state = ap_const_lv2_2) and (out_stream_V_data_V_1_vld_in = ap_const_logic_1)) or (not(((out_stream_V_data_V_1_vld_in = ap_const_logic_0) and (out_stream_V_data_V_1_ack_out = ap_const_logic_1))) and not(((out_stream_TREADY = ap_const_logic_0) and (out_stream_V_data_V_1_vld_in = ap_const_logic_1))) and (out_stream_V_data_V_1_state = ap_const_lv2_3)) or ((out_stream_V_data_V_1_state = ap_const_lv2_1) and (out_stream_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    out_stream_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    out_stream_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_stream_V_keep_V_1_ack_out = ap_const_logic_1) and (out_stream_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        out_stream_V_keep_V_1_sel_rd <= not(out_stream_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_stream_V_keep_V_1_state = ap_const_lv2_2) and (out_stream_V_keep_V_1_vld_in = ap_const_logic_0)) or ((out_stream_V_keep_V_1_state = ap_const_lv2_3) and (out_stream_V_keep_V_1_vld_in = ap_const_logic_0) and (out_stream_V_keep_V_1_ack_out = ap_const_logic_1)))) then 
                    out_stream_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((out_stream_V_keep_V_1_state = ap_const_lv2_1) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_keep_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0) and (out_stream_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    out_stream_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_stream_V_keep_V_1_vld_in = ap_const_logic_0) and (out_stream_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((out_stream_TREADY = ap_const_logic_0) and (out_stream_V_keep_V_1_vld_in = ap_const_logic_1))) and (out_stream_V_keep_V_1_state = ap_const_lv2_3)) or ((out_stream_V_keep_V_1_state = ap_const_lv2_1) and (out_stream_V_keep_V_1_ack_out = ap_const_logic_1)) or ((out_stream_V_keep_V_1_state = ap_const_lv2_2) and (out_stream_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    out_stream_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    out_stream_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_stream_V_last_V_1_ack_out = ap_const_logic_1) and (out_stream_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        out_stream_V_last_V_1_sel_rd <= not(out_stream_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_stream_V_last_V_1_ack_in = ap_const_logic_1) and (out_stream_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        out_stream_V_last_V_1_sel_wr <= not(out_stream_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_stream_V_last_V_1_state = ap_const_lv2_2) and (out_stream_V_last_V_1_vld_in = ap_const_logic_0)) or ((out_stream_V_last_V_1_state = ap_const_lv2_3) and (out_stream_V_last_V_1_vld_in = ap_const_logic_0) and (out_stream_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    out_stream_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((out_stream_V_last_V_1_state = ap_const_lv2_1) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_last_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0) and (out_stream_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    out_stream_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_stream_V_last_V_1_vld_in = ap_const_logic_0) and (out_stream_V_last_V_1_ack_out = ap_const_logic_1))) and not(((out_stream_TREADY = ap_const_logic_0) and (out_stream_V_last_V_1_vld_in = ap_const_logic_1))) and (out_stream_V_last_V_1_state = ap_const_lv2_3)) or ((out_stream_V_last_V_1_state = ap_const_lv2_1) and (out_stream_V_last_V_1_ack_out = ap_const_logic_1)) or ((out_stream_V_last_V_1_state = ap_const_lv2_2) and (out_stream_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    out_stream_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    out_stream_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_stream_V_strb_V_1_ack_out = ap_const_logic_1) and (out_stream_V_strb_V_1_vld_out = ap_const_logic_1))) then 
                                        out_stream_V_strb_V_1_sel_rd <= not(out_stream_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_stream_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_stream_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_stream_V_strb_V_1_state = ap_const_lv2_2) and (out_stream_V_strb_V_1_vld_in = ap_const_logic_0)) or ((out_stream_V_strb_V_1_state = ap_const_lv2_3) and (out_stream_V_strb_V_1_vld_in = ap_const_logic_0) and (out_stream_V_strb_V_1_ack_out = ap_const_logic_1)))) then 
                    out_stream_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((out_stream_V_strb_V_1_state = ap_const_lv2_1) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_strb_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0) and (out_stream_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    out_stream_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_stream_V_strb_V_1_vld_in = ap_const_logic_0) and (out_stream_V_strb_V_1_ack_out = ap_const_logic_1))) and not(((out_stream_TREADY = ap_const_logic_0) and (out_stream_V_strb_V_1_vld_in = ap_const_logic_1))) and (out_stream_V_strb_V_1_state = ap_const_lv2_3)) or ((out_stream_V_strb_V_1_state = ap_const_lv2_1) and (out_stream_V_strb_V_1_ack_out = ap_const_logic_1)) or ((out_stream_V_strb_V_1_state = ap_const_lv2_2) and (out_stream_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    out_stream_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    out_stream_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    b_0_in_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state45_io) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
                b_0_in_reg_285 <= b_reg_6737;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
                b_0_in_reg_285 <= n_bits_read_reg_5850;
            end if; 
        end if;
    end process;

    bvh_d_index_fu_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state44_io) and (tmp_96_fu_5797_p3 = ap_const_lv1_0) and (icmp_ln86_fu_5756_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                bvh_d_index_fu_206 <= bit_pos_fu_5785_p2;
            elsif ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_state44_io) and (tmp_96_fu_5797_p3 = ap_const_lv1_1) and (icmp_ln86_fu_5756_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
                bvh_d_index_fu_206 <= ap_const_lv32_7;
            end if; 
        end if;
    end process;

    bytes_sent_1_fu_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state44_io) and (tmp_96_fu_5797_p3 = ap_const_lv1_1) and (icmp_ln86_fu_5756_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                bytes_sent_1_fu_210 <= grp_fu_492_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bytes_sent_1_fu_210 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_Val2_1_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state44_io) and (icmp_ln86_fu_5756_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                p_Val2_1_reg_254 <= x_log_iter4_V_reg_6727;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_Val2_1_reg_254 <= select_ln603_3_fu_887_p3;
            end if; 
        end if;
    end process;

    reg_275_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state45_io) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
                reg_275 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln92_reg_6750),93));
            elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
                reg_275 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(total_bits_0_reg_263),93));
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or ((icmp_ln53_fu_927_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                reg_275 <= grp_fu_295_p2;
            end if; 
        end if;
    end process;

    tmp_data_V_fu_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state44_io) and (tmp_96_fu_5797_p3 = ap_const_lv1_0) and (icmp_ln86_fu_5756_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                tmp_data_V_fu_214 <= p_Result_97_fu_5774_p4;
            elsif ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_state44_io) and (tmp_96_fu_5797_p3 = ap_const_lv1_1) and (icmp_ln86_fu_5756_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
                tmp_data_V_fu_214 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    total_bits_0_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state44_io) and (icmp_ln86_fu_5756_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                total_bits_0_reg_263 <= total_bits_reg_5902;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                total_bits_0_reg_263 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                add_ln1192_4_reg_6475 <= add_ln1192_4_fu_4192_p2;
                r_V_8_reg_408 <= grp_fu_295_p2;
                ret_V_20_reg_6481 <= ret_V_20_fu_4203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                add_ln1192_reg_6190 <= add_ln1192_fu_2557_p2;
                r_V_4_reg_333 <= grp_fu_295_p2;
                ret_V_10_reg_6196 <= ret_V_10_fu_2568_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln53_reg_5883 <= add_ln53_fu_910_p2;
                mask_reg_5889 <= mask_fu_921_p2;
                    zext_ln39_reg_5873(28 downto 0) <= zext_ln39_fu_883_p1(28 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state44_io) and (icmp_ln86_fu_5756_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                add_ln92_reg_6750 <= add_ln92_fu_5791_p2;
                tmp_96_reg_6755 <= bit_pos_fu_5785_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state44_io) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                b_reg_6737 <= b_fu_5750_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_fu_927_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln109_reg_5908 <= icmp_ln109_fu_989_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                icmp_ln885_10_reg_6517 <= icmp_ln885_10_fu_4331_p2;
                icmp_ln908_10_reg_6540 <= icmp_ln908_10_fu_4485_p2;
                    or_ln899_s_reg_6535(0) <= or_ln899_s_fu_4477_p3(0);
                sub_ln894_10_reg_6529 <= sub_ln894_10_fu_4377_p2;
                tmp_V_52_reg_6523 <= tmp_V_52_fu_4341_p3;
                trunc_ln893_10_reg_6545 <= trunc_ln893_10_fu_4491_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                icmp_ln885_2_reg_6086 <= icmp_ln885_2_fu_1838_p2;
                icmp_ln908_2_reg_6109 <= icmp_ln908_2_fu_1992_p2;
                    or_ln899_2_reg_6104(0) <= or_ln899_2_fu_1984_p3(0);
                sub_ln894_2_reg_6098 <= sub_ln894_2_fu_1884_p2;
                tmp_V_39_reg_6092 <= tmp_V_39_fu_1848_p3;
                trunc_ln893_2_reg_6114 <= trunc_ln893_2_fu_1998_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                icmp_ln885_5_reg_6232 <= icmp_ln885_5_fu_2696_p2;
                icmp_ln908_5_reg_6255 <= icmp_ln908_5_fu_2850_p2;
                    or_ln899_5_reg_6250(0) <= or_ln899_5_fu_2842_p3(0);
                sub_ln894_5_reg_6244 <= sub_ln894_5_fu_2742_p2;
                tmp_V_44_reg_6238 <= tmp_V_44_fu_2706_p3;
                trunc_ln893_5_reg_6260 <= trunc_ln893_5_fu_2856_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                icmp_ln885_7_reg_6371 <= icmp_ln885_7_fu_3473_p2;
                icmp_ln908_7_reg_6394 <= icmp_ln908_7_fu_3627_p2;
                    or_ln899_7_reg_6389(0) <= or_ln899_7_fu_3619_p3(0);
                sub_ln894_7_reg_6383 <= sub_ln894_7_fu_3519_p2;
                tmp_V_47_reg_6377 <= tmp_V_47_fu_3483_p3;
                trunc_ln893_7_reg_6399 <= trunc_ln893_7_fu_3633_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln885_reg_5947 <= icmp_ln885_fu_1061_p2;
                icmp_ln908_reg_5970 <= icmp_ln908_fu_1215_p2;
                    or_ln_reg_5965(0) <= or_ln_fu_1207_p3(0);
                sub_ln894_reg_5959 <= sub_ln894_fu_1107_p2;
                tmp_V_36_reg_5953 <= tmp_V_36_fu_1071_p3;
                trunc_ln893_reg_5975 <= trunc_ln893_fu_1221_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                icmp_ln908_11_reg_6672 <= icmp_ln908_11_fu_5192_p2;
                icmp_ln908_4_reg_6607 <= icmp_ln908_4_fu_4859_p2;
                icmp_ln908_9_reg_6645 <= icmp_ln908_9_fu_5033_p2;
                    or_ln899_10_reg_6667(0) <= or_ln899_10_fu_5184_p3(0);
                    or_ln899_4_reg_6602(0) <= or_ln899_4_fu_4851_p3(0);
                    or_ln899_9_reg_6640(0) <= or_ln899_9_fu_5025_p3(0);
                p_Result_76_reg_6585 <= tmp_V_42_fu_4695_p2(47 downto 47);
                p_Result_89_reg_6623 <= tmp_V_50_fu_4869_p2(47 downto 47);
                sub_ln894_11_reg_6661 <= sub_ln894_11_fu_5084_p2;
                sub_ln894_4_reg_6596 <= sub_ln894_4_fu_4751_p2;
                sub_ln894_9_reg_6634 <= sub_ln894_9_fu_4925_p2;
                tmp_V_42_reg_6579 <= tmp_V_42_fu_4695_p2;
                tmp_V_43_reg_6590 <= tmp_V_43_fu_4713_p3;
                tmp_V_50_reg_6617 <= tmp_V_50_fu_4869_p2;
                tmp_V_51_reg_6628 <= tmp_V_51_fu_4887_p3;
                tmp_V_54_reg_6655 <= tmp_V_54_fu_5048_p3;
                trunc_ln893_11_reg_6677 <= trunc_ln893_11_fu_5198_p1;
                trunc_ln893_4_reg_6612 <= trunc_ln893_4_fu_4865_p1;
                trunc_ln893_9_reg_6650 <= trunc_ln893_9_fu_5039_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                icmp_ln908_1_reg_6026 <= icmp_ln908_1_fu_1574_p2;
                    or_ln899_1_reg_6021(0) <= or_ln899_1_fu_1566_p3(0);
                sub_ln894_1_reg_6015 <= sub_ln894_1_fu_1466_p2;
                tmp_V_38_reg_6009 <= tmp_V_38_fu_1430_p3;
                trunc_ln893_1_reg_6031 <= trunc_ln893_1_fu_1580_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                icmp_ln908_3_reg_6165 <= icmp_ln908_3_fu_2351_p2;
                    or_ln899_3_reg_6160(0) <= or_ln899_3_fu_2343_p3(0);
                sub_ln894_3_reg_6154 <= sub_ln894_3_fu_2243_p2;
                tmp_V_41_reg_6148 <= tmp_V_41_fu_2207_p3;
                trunc_ln893_3_reg_6170 <= trunc_ln893_3_fu_2357_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                icmp_ln908_6_reg_6311 <= icmp_ln908_6_fu_3209_p2;
                    or_ln899_6_reg_6306(0) <= or_ln899_6_fu_3201_p3(0);
                sub_ln894_6_reg_6300 <= sub_ln894_6_fu_3101_p2;
                tmp_V_46_reg_6294 <= tmp_V_46_fu_3065_p3;
                trunc_ln893_6_reg_6316 <= trunc_ln893_6_fu_3215_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                icmp_ln908_8_reg_6450 <= icmp_ln908_8_fu_3986_p2;
                    or_ln899_8_reg_6445(0) <= or_ln899_8_fu_3978_p3(0);
                sub_ln894_8_reg_6439 <= sub_ln894_8_fu_3878_p2;
                tmp_V_49_reg_6433 <= tmp_V_49_fu_3842_p3;
                trunc_ln893_8_reg_6455 <= trunc_ln893_8_fu_3992_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln885_5_reg_6232 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                icmp_ln924_10_reg_6270 <= icmp_ln924_10_fu_2987_p2;
                icmp_ln924_11_reg_6275 <= icmp_ln924_11_fu_2993_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                icmp_ln924_12_reg_6326 <= icmp_ln924_12_fu_3346_p2;
                icmp_ln924_13_reg_6331 <= icmp_ln924_13_fu_3352_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln885_7_reg_6371 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                icmp_ln924_14_reg_6409 <= icmp_ln924_14_fu_3764_p2;
                icmp_ln924_15_reg_6414 <= icmp_ln924_15_fu_3770_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                icmp_ln924_16_reg_6465 <= icmp_ln924_16_fu_4123_p2;
                icmp_ln924_17_reg_6470 <= icmp_ln924_17_fu_4129_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                icmp_ln924_18_reg_6702 <= icmp_ln924_18_fu_5468_p2;
                icmp_ln924_19_reg_6707 <= icmp_ln924_19_fu_5474_p2;
                icmp_ln924_22_reg_6717 <= icmp_ln924_22_fu_5607_p2;
                icmp_ln924_23_reg_6722 <= icmp_ln924_23_fu_5613_p2;
                icmp_ln924_8_reg_6687 <= icmp_ln924_8_fu_5329_p2;
                icmp_ln924_9_reg_6692 <= icmp_ln924_9_fu_5335_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln885_reg_5947 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                icmp_ln924_1_reg_5990 <= icmp_ln924_1_fu_1358_p2;
                icmp_ln924_reg_5985 <= icmp_ln924_fu_1352_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln885_10_reg_6517 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                icmp_ln924_20_reg_6555 <= icmp_ln924_20_fu_4622_p2;
                icmp_ln924_21_reg_6560 <= icmp_ln924_21_fu_4628_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                icmp_ln924_2_reg_6041 <= icmp_ln924_2_fu_1711_p2;
                icmp_ln924_3_reg_6046 <= icmp_ln924_3_fu_1717_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln885_2_reg_6086 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                icmp_ln924_4_reg_6124 <= icmp_ln924_4_fu_2129_p2;
                icmp_ln924_5_reg_6129 <= icmp_ln924_5_fu_2135_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                icmp_ln924_6_reg_6180 <= icmp_ln924_6_fu_2488_p2;
                icmp_ln924_7_reg_6185 <= icmp_ln924_7_fu_2494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                n_bits_read_reg_5850 <= n_bits;
                num_bits_read_reg_5841 <= num_bits;
                or_ln603_2_reg_5863 <= or_ln603_2_fu_830_p2;
                select_ln603_2_reg_5858 <= select_ln603_2_fu_822_p3;
                tmp_39_reg_5868 <= n_bits(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_stream_V_data_V_1_load_A = ap_const_logic_1)) then
                out_stream_V_data_V_1_payload_A <= out_stream_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_stream_V_data_V_1_load_B = ap_const_logic_1)) then
                out_stream_V_data_V_1_payload_B <= out_stream_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_stream_V_last_V_1_load_A = ap_const_logic_1)) then
                out_stream_V_last_V_1_payload_A <= grp_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_stream_V_last_V_1_load_B = ap_const_logic_1)) then
                out_stream_V_last_V_1_payload_B <= grp_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                p_Result_10_reg_5936 <= x_new_V_21_fu_1004_p3(47 downto 47);
                select_ln886_reg_5942 <= select_ln886_fu_1053_p3;
                x_new_V_21_reg_5927 <= x_new_V_21_fu_1004_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                p_Result_27_reg_6075 <= x_new_V_23_fu_1781_p3(47 downto 47);
                select_ln886_1_reg_6081 <= select_ln886_1_fu_1830_p3;
                x_new_V_23_reg_6066 <= x_new_V_23_fu_1781_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                p_Result_45_reg_6221 <= x_new_V_25_fu_2639_p3(47 downto 47);
                select_ln886_2_reg_6227 <= select_ln886_2_fu_2688_p3;
                x_new_V_25_reg_6212 <= x_new_V_25_fu_2639_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                p_Result_51_reg_6360 <= x_new_V_27_fu_3416_p3(47 downto 47);
                select_ln886_3_reg_6366 <= select_ln886_3_fu_3465_p3;
                x_new_V_27_reg_6351 <= x_new_V_27_fu_3416_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                p_Result_60_reg_6506 <= x_new_V_29_fu_4274_p3(47 downto 47);
                select_ln886_4_reg_6512 <= select_ln886_4_fu_4323_p3;
                x_new_V_29_reg_6497 <= x_new_V_29_fu_4274_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                p_Result_68_reg_6003 <= tmp_V_37_fu_1410_p3(47 downto 47);
                tmp_V_37_reg_5995 <= tmp_V_37_fu_1410_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                p_Result_73_reg_6142 <= tmp_V_40_fu_2187_p3(47 downto 47);
                tmp_V_40_reg_6134 <= tmp_V_40_fu_2187_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                p_Result_81_reg_6288 <= tmp_V_45_fu_3045_p3(47 downto 47);
                tmp_V_45_reg_6280 <= tmp_V_45_fu_3045_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                p_Result_86_reg_6427 <= tmp_V_48_fu_3822_p3(47 downto 47);
                tmp_V_48_reg_6419 <= tmp_V_48_fu_3822_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                p_Result_94_reg_6573 <= tmp_V_53_fu_4680_p3(47 downto 47);
                tmp_V_53_reg_6565 <= tmp_V_53_fu_4680_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                r_V_6_reg_411 <= grp_fu_296_p2(93 - 1 downto 0);
                ret_V_13_reg_6341 <= ret_V_13_fu_3401_p2;
                rhs_V_6_reg_6336 <= rhs_V_6_fu_3397_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_554 <= grp_fu_297_p2(133 downto 86);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                ret_V_3_reg_6056 <= ret_V_3_fu_1766_p2;
                rhs_V_5_reg_6051 <= rhs_V_5_fu_1762_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_fu_927_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                ret_V_reg_5897 <= ret_V_fu_941_p2;
                total_bits_reg_5902 <= total_bits_fu_983_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                sub_ln703_3_reg_6486 <= sub_ln703_3_fu_4259_p2;
                tmp_86_reg_6492 <= grp_fu_297_p2(133 downto 133);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                sub_ln703_reg_6201 <= sub_ln703_fu_2624_p2;
                tmp_63_reg_6207 <= grp_fu_297_p2(133 downto 133);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_40_reg_5922 <= grp_fu_297_p2(133 downto 133);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                tmp_49_reg_6061 <= grp_fu_297_p2(133 downto 133);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                tmp_72_reg_6346 <= grp_fu_297_p2(133 downto 133);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                val_reg_6732 <= val_fu_5745_p2;
                x_log_iter4_V_reg_6727 <= x_log_iter4_V_fu_5700_p3;
            end if;
        end if;
    end process;
    zext_ln39_reg_5873(31 downto 29) <= "000";
    or_ln_reg_5965(31 downto 1) <= "0000000000000000000000000000000";
    or_ln899_1_reg_6021(31 downto 1) <= "0000000000000000000000000000000";
    or_ln899_2_reg_6104(31 downto 1) <= "0000000000000000000000000000000";
    or_ln899_3_reg_6160(31 downto 1) <= "0000000000000000000000000000000";
    or_ln899_5_reg_6250(31 downto 1) <= "0000000000000000000000000000000";
    or_ln899_6_reg_6306(31 downto 1) <= "0000000000000000000000000000000";
    or_ln899_7_reg_6389(31 downto 1) <= "0000000000000000000000000000000";
    or_ln899_8_reg_6445(31 downto 1) <= "0000000000000000000000000000000";
    or_ln899_s_reg_6535(31 downto 1) <= "0000000000000000000000000000000";
    or_ln899_4_reg_6602(31 downto 1) <= "0000000000000000000000000000000";
    or_ln899_9_reg_6640(31 downto 1) <= "0000000000000000000000000000000";
    or_ln899_10_reg_6667(31 downto 1) <= "0000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, out_stream_TREADY, out_stream_V_data_V_1_state, out_stream_V_keep_V_1_state, out_stream_V_strb_V_1_state, out_stream_V_last_V_1_state, ap_CS_fsm_state44, icmp_ln86_fu_5756_p2, ap_CS_fsm_state45, ap_CS_fsm_state3, icmp_ln53_fu_927_p2, ap_CS_fsm_state46, ap_block_state3_io, ap_block_state44_io, ap_block_state45_io, ap_block_state46_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln53_fu_927_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                elsif (((icmp_ln53_fu_927_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                if (((ap_const_boolean_0 = ap_block_state44_io) and (icmp_ln86_fu_5756_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_const_boolean_0 = ap_block_state44_io) and (icmp_ln86_fu_5756_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                if (((ap_const_boolean_0 = ap_block_state45_io) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                if ((not(((out_stream_V_last_V_1_state = ap_const_lv2_1) or (out_stream_V_strb_V_1_state = ap_const_lv2_1) or (out_stream_V_keep_V_1_state = ap_const_lv2_1) or (out_stream_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state46_io) or ((out_stream_V_last_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_strb_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_keep_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_data_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_630_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_fu_590_p1));
    I1_fu_5707_p1 <= x_log_iter4_V_fu_5700_p3(32 - 1 downto 0);
    I2_fu_5714_p3 <= 
        trunc_ln565_2_fu_5711_p1 when (and_ln924_19_fu_5667_p2(0) = '1') else 
        ap_const_lv32_0;
    I3_fu_5725_p3 <= 
        trunc_ln565_3_fu_5722_p1 when (and_ln924_9_fu_5640_p2(0) = '1') else 
        ap_const_lv32_0;
    a_10_fu_4437_p2 <= (icmp_ln897_21_fu_4431_p2 and icmp_ln897_20_fu_4399_p2);
    a_11_fu_5144_p2 <= (icmp_ln897_23_fu_5138_p2 and icmp_ln897_22_fu_5106_p2);
    a_1_fu_1526_p2 <= (icmp_ln897_3_fu_1520_p2 and icmp_ln897_2_fu_1488_p2);
    a_2_fu_1944_p2 <= (icmp_ln897_5_fu_1938_p2 and icmp_ln897_4_fu_1906_p2);
    a_3_fu_2303_p2 <= (icmp_ln897_7_fu_2297_p2 and icmp_ln897_6_fu_2265_p2);
    a_4_fu_4811_p2 <= (icmp_ln897_9_fu_4805_p2 and icmp_ln897_8_fu_4773_p2);
    a_5_fu_2802_p2 <= (icmp_ln897_11_fu_2796_p2 and icmp_ln897_10_fu_2764_p2);
    a_6_fu_3161_p2 <= (icmp_ln897_13_fu_3155_p2 and icmp_ln897_12_fu_3123_p2);
    a_7_fu_3579_p2 <= (icmp_ln897_15_fu_3573_p2 and icmp_ln897_14_fu_3541_p2);
    a_8_fu_3938_p2 <= (icmp_ln897_17_fu_3932_p2 and icmp_ln897_16_fu_3900_p2);
    a_9_fu_4985_p2 <= (icmp_ln897_19_fu_4979_p2 and icmp_ln897_18_fu_4947_p2);
    a_fu_1167_p2 <= (icmp_ln897_fu_1129_p2 and icmp_ln897_1_fu_1161_p2);
    add_ln1192_4_fu_4192_p2 <= std_logic_vector(signed(sext_ln1116_6_fu_4179_p1) + signed(sext_ln1116_7_fu_4188_p1));
    add_ln1192_fu_2557_p2 <= std_logic_vector(signed(sext_ln1116_2_fu_2544_p1) + signed(sext_ln1116_3_fu_2553_p1));
    add_ln39_1_fu_869_p2 <= std_logic_vector(unsigned(ap_const_lv29_1) + unsigned(trunc_ln_fu_859_p4));
    add_ln39_fu_854_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(num_bits_read_reg_5841));
    add_ln53_fu_910_p2 <= std_logic_vector(unsigned(smax1266_neg_fu_903_p3) + unsigned(sub_ln53_fu_893_p2));
    add_ln581_fu_642_p2 <= std_logic_vector(signed(ap_const_lv12_FD5) + signed(F2_fu_630_p2));
    add_ln703_1_fu_2158_p2 <= std_logic_vector(unsigned(ap_const_lv48_80000000000) + unsigned(x_new_V_23_reg_6066));
    add_ln703_3_fu_3016_p2 <= std_logic_vector(unsigned(ap_const_lv48_80000000000) + unsigned(x_new_V_25_reg_6212));
    add_ln703_4_fu_3793_p2 <= std_logic_vector(unsigned(ap_const_lv48_80000000000) + unsigned(x_new_V_27_reg_6351));
    add_ln703_6_fu_4651_p2 <= std_logic_vector(unsigned(ap_const_lv48_80000000000) + unsigned(x_new_V_29_reg_6497));
    add_ln703_fu_1381_p2 <= std_logic_vector(unsigned(ap_const_lv48_80000000000) + unsigned(x_new_V_21_reg_5927));
    add_ln86_fu_947_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(total_bits_0_reg_263));
    add_ln908_10_fu_4498_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_10_reg_6529));
    add_ln908_11_fu_5483_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_11_reg_6661));
    add_ln908_1_fu_1587_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_1_reg_6015));
    add_ln908_2_fu_2005_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_2_reg_6098));
    add_ln908_3_fu_2364_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_3_reg_6154));
    add_ln908_4_fu_5205_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_4_reg_6596));
    add_ln908_5_fu_2863_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_5_reg_6244));
    add_ln908_6_fu_3222_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_6_reg_6300));
    add_ln908_7_fu_3640_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_7_reg_6383));
    add_ln908_8_fu_3999_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_8_reg_6439));
    add_ln908_9_fu_5344_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_9_reg_6634));
    add_ln908_fu_1228_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_reg_5959));
    add_ln915_10_fu_4582_p2 <= std_logic_vector(unsigned(sub_ln915_10_fu_4577_p2) + unsigned(select_ln915_10_fu_4569_p3));
    add_ln915_11_fu_5567_p2 <= std_logic_vector(unsigned(sub_ln915_11_fu_5562_p2) + unsigned(select_ln915_11_fu_5554_p3));
    add_ln915_1_fu_1671_p2 <= std_logic_vector(unsigned(sub_ln915_1_fu_1666_p2) + unsigned(select_ln915_1_fu_1658_p3));
    add_ln915_2_fu_2089_p2 <= std_logic_vector(unsigned(sub_ln915_2_fu_2084_p2) + unsigned(select_ln915_2_fu_2076_p3));
    add_ln915_3_fu_2448_p2 <= std_logic_vector(unsigned(sub_ln915_3_fu_2443_p2) + unsigned(select_ln915_3_fu_2435_p3));
    add_ln915_4_fu_5289_p2 <= std_logic_vector(unsigned(sub_ln915_4_fu_5284_p2) + unsigned(select_ln915_4_fu_5276_p3));
    add_ln915_5_fu_2947_p2 <= std_logic_vector(unsigned(sub_ln915_5_fu_2942_p2) + unsigned(select_ln915_5_fu_2934_p3));
    add_ln915_6_fu_3306_p2 <= std_logic_vector(unsigned(sub_ln915_6_fu_3301_p2) + unsigned(select_ln915_6_fu_3293_p3));
    add_ln915_7_fu_3724_p2 <= std_logic_vector(unsigned(sub_ln915_7_fu_3719_p2) + unsigned(select_ln915_7_fu_3711_p3));
    add_ln915_8_fu_4083_p2 <= std_logic_vector(unsigned(sub_ln915_8_fu_4078_p2) + unsigned(select_ln915_8_fu_4070_p3));
    add_ln915_9_fu_5428_p2 <= std_logic_vector(unsigned(sub_ln915_9_fu_5423_p2) + unsigned(select_ln915_9_fu_5415_p3));
    add_ln915_fu_1312_p2 <= std_logic_vector(unsigned(sub_ln915_fu_1307_p2) + unsigned(select_ln915_fu_1299_p3));
    add_ln92_fu_5791_p1 <= reg_275(32 - 1 downto 0);
    add_ln92_fu_5791_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(add_ln92_fu_5791_p1));
    and_ln581_fu_752_p2 <= (xor_ln582_fu_746_p2 and icmp_ln581_fu_636_p2);
    and_ln582_fu_734_p2 <= (xor_ln571_fu_728_p2 and icmp_ln582_fu_666_p2);
    and_ln585_1_fu_770_p2 <= (xor_ln585_fu_764_p2 and and_ln581_fu_752_p2);
    and_ln585_fu_758_p2 <= (icmp_ln585_fu_676_p2 and and_ln581_fu_752_p2);
    and_ln603_fu_788_p2 <= (xor_ln581_fu_782_p2 and icmp_ln603_fu_682_p2);
    and_ln899_10_fu_4465_p2 <= (xor_ln899_10_fu_4451_p2 and p_Result_44_fu_4457_p3);
    and_ln899_11_fu_5172_p2 <= (xor_ln899_11_fu_5158_p2 and p_Result_52_fu_5164_p3);
    and_ln899_1_fu_1554_p2 <= (xor_ln899_1_fu_1540_p2 and p_Result_9_fu_1546_p3);
    and_ln899_2_fu_1972_p2 <= (xor_ln899_2_fu_1958_p2 and p_Result_23_fu_1964_p3);
    and_ln899_3_fu_2331_p2 <= (xor_ln899_3_fu_2317_p2 and p_Result_35_fu_2323_p3);
    and_ln899_4_fu_4839_p2 <= (xor_ln899_4_fu_4825_p2 and p_Result_4_fu_4831_p3);
    and_ln899_5_fu_2830_p2 <= (xor_ln899_5_fu_2816_p2 and p_Result_12_fu_2822_p3);
    and_ln899_6_fu_3189_p2 <= (xor_ln899_6_fu_3175_p2 and p_Result_17_fu_3181_p3);
    and_ln899_7_fu_3607_p2 <= (xor_ln899_7_fu_3593_p2 and p_Result_24_fu_3599_p3);
    and_ln899_8_fu_3966_p2 <= (xor_ln899_8_fu_3952_p2 and p_Result_29_fu_3958_p3);
    and_ln899_9_fu_5013_p2 <= (xor_ln899_9_fu_4999_p2 and p_Result_38_fu_5005_p3);
    and_ln899_fu_1195_p2 <= (xor_ln899_fu_1181_p2 and p_Result_5_fu_1187_p3);
    and_ln924_10_fu_3003_p2 <= (or_ln924_5_fu_2999_p2 and grp_fu_456_p2);
    and_ln924_11_fu_3032_p2 <= (xor_ln885_2_fu_3027_p2 and and_ln924_10_fu_3003_p2);
    and_ln924_12_fu_3362_p2 <= (or_ln924_6_fu_3358_p2 and grp_fu_456_p2);
    and_ln924_13_fu_3379_p2 <= (xor_ln924_3_fu_3368_p2 and icmp_ln885_6_fu_3374_p2);
    and_ln924_14_fu_3780_p2 <= (or_ln924_7_fu_3776_p2 and grp_fu_456_p2);
    and_ln924_15_fu_3809_p2 <= (xor_ln885_3_fu_3804_p2 and and_ln924_14_fu_3780_p2);
    and_ln924_16_fu_4139_p2 <= (or_ln924_8_fu_4135_p2 and grp_fu_456_p2);
    and_ln924_17_fu_4156_p2 <= (xor_ln924_4_fu_4145_p2 and icmp_ln885_8_fu_4151_p2);
    and_ln924_18_fu_5650_p2 <= (or_ln924_9_fu_5646_p2 and grp_fu_462_p2);
    and_ln924_19_fu_5667_p2 <= (xor_ln924_5_fu_5656_p2 and icmp_ln885_9_fu_5662_p2);
    and_ln924_1_fu_1397_p2 <= (xor_ln885_fu_1392_p2 and and_ln924_fu_1368_p2);
    and_ln924_20_fu_4638_p2 <= (or_ln924_10_fu_4634_p2 and grp_fu_456_p2);
    and_ln924_21_fu_4667_p2 <= (xor_ln885_4_fu_4662_p2 and and_ln924_20_fu_4638_p2);
    and_ln924_22_fu_5677_p2 <= (or_ln924_11_fu_5673_p2 and grp_fu_467_p2);
    and_ln924_23_fu_5694_p2 <= (xor_ln924_6_fu_5683_p2 and icmp_ln885_11_fu_5689_p2);
    and_ln924_2_fu_1727_p2 <= (or_ln924_1_fu_1723_p2 and grp_fu_456_p2);
    and_ln924_3_fu_1744_p2 <= (xor_ln924_fu_1733_p2 and icmp_ln885_1_fu_1739_p2);
    and_ln924_4_fu_2145_p2 <= (or_ln924_2_fu_2141_p2 and grp_fu_456_p2);
    and_ln924_5_fu_2174_p2 <= (xor_ln885_1_fu_2169_p2 and and_ln924_4_fu_2145_p2);
    and_ln924_6_fu_2504_p2 <= (or_ln924_3_fu_2500_p2 and grp_fu_456_p2);
    and_ln924_7_fu_2521_p2 <= (xor_ln924_1_fu_2510_p2 and icmp_ln885_3_fu_2516_p2);
    and_ln924_8_fu_5623_p2 <= (or_ln924_4_fu_5619_p2 and grp_fu_456_p2);
    and_ln924_9_fu_5640_p2 <= (xor_ln924_2_fu_5629_p2 and icmp_ln885_4_fu_5635_p2);
    and_ln924_fu_1368_p2 <= (or_ln924_fu_1364_p2 and grp_fu_456_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state3_io_assign_proc : process(out_stream_V_data_V_1_ack_in, ap_predicate_op152_write_state3)
    begin
                ap_block_state3_io <= ((ap_predicate_op152_write_state3 = ap_const_boolean_1) and (out_stream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state44_io_assign_proc : process(out_stream_V_data_V_1_ack_in, ap_predicate_op1008_write_state44)
    begin
                ap_block_state44_io <= ((ap_predicate_op1008_write_state44 = ap_const_boolean_1) and (out_stream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state45_io_assign_proc : process(out_stream_V_data_V_1_ack_in, tmp_96_reg_6755)
    begin
                ap_block_state45_io <= ((tmp_96_reg_6755 = ap_const_lv1_1) and (out_stream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state46_assign_proc : process(out_stream_TREADY, out_stream_V_data_V_1_state, out_stream_V_keep_V_1_state, out_stream_V_strb_V_1_state, out_stream_V_last_V_1_state)
    begin
                ap_block_state46 <= ((out_stream_V_last_V_1_state = ap_const_lv2_1) or (out_stream_V_strb_V_1_state = ap_const_lv2_1) or (out_stream_V_keep_V_1_state = ap_const_lv2_1) or (out_stream_V_data_V_1_state = ap_const_lv2_1) or ((out_stream_V_last_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_strb_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_keep_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_data_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)));
    end process;


    ap_block_state46_io_assign_proc : process(out_stream_V_data_V_1_ack_in, icmp_ln109_reg_5908)
    begin
                ap_block_state46_io <= ((icmp_ln109_reg_5908 = ap_const_lv1_0) and (out_stream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(out_stream_TREADY, out_stream_V_data_V_1_state, out_stream_V_keep_V_1_state, out_stream_V_strb_V_1_state, out_stream_V_last_V_1_state, ap_CS_fsm_state46, ap_block_state46_io)
    begin
        if ((not(((out_stream_V_last_V_1_state = ap_const_lv2_1) or (out_stream_V_strb_V_1_state = ap_const_lv2_1) or (out_stream_V_keep_V_1_state = ap_const_lv2_1) or (out_stream_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state46_io) or ((out_stream_V_last_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_strb_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_keep_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_data_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op1008_write_state44_assign_proc : process(icmp_ln86_fu_5756_p2, tmp_96_fu_5797_p3)
    begin
                ap_predicate_op1008_write_state44 <= ((tmp_96_fu_5797_p3 = ap_const_lv1_1) and (icmp_ln86_fu_5756_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op152_write_state3_assign_proc : process(icmp_ln53_fu_927_p2, icmp_ln109_fu_989_p2)
    begin
                ap_predicate_op152_write_state3 <= ((icmp_ln109_fu_989_p2 = ap_const_lv1_0) and (icmp_ln53_fu_927_p2 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(out_stream_TREADY, out_stream_V_data_V_1_state, out_stream_V_keep_V_1_state, out_stream_V_strb_V_1_state, out_stream_V_last_V_1_state, ap_CS_fsm_state46, ap_block_state46_io)
    begin
        if ((not(((out_stream_V_last_V_1_state = ap_const_lv2_1) or (out_stream_V_strb_V_1_state = ap_const_lv2_1) or (out_stream_V_keep_V_1_state = ap_const_lv2_1) or (out_stream_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state46_io) or ((out_stream_V_last_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_strb_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_keep_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)) or ((out_stream_V_data_V_1_state = ap_const_lv2_3) and (out_stream_TREADY = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ashr_ln586_fu_692_p2 <= std_logic_vector(shift_right(signed(man_V_2_fu_616_p3),to_integer(unsigned('0' & zext_ln586_fu_688_p1(31-1 downto 0)))));
    b_fu_5750_p2 <= std_logic_vector(unsigned(b_0_in_reg_285) + unsigned(ap_const_lv32_FFFFFFFF));
    bit_V_fu_5766_p1 <= lshr_ln89_fu_5761_p2(1 - 1 downto 0);
    bit_pos_fu_5785_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(bvh_d_index_fu_206));
    bitcast_ln729_10_fu_4607_p1 <= p_Result_93_fu_4595_p5;
    bitcast_ln729_1_fu_1696_p1 <= p_Result_70_fu_1684_p5;
    bitcast_ln729_2_fu_2114_p1 <= p_Result_72_fu_2102_p5;
    bitcast_ln729_3_fu_2473_p1 <= p_Result_75_fu_2461_p5;
    bitcast_ln729_4_fu_5314_p1 <= p_Result_78_fu_5302_p5;
    bitcast_ln729_5_fu_2972_p1 <= p_Result_80_fu_2960_p5;
    bitcast_ln729_6_fu_3331_p1 <= p_Result_83_fu_3319_p5;
    bitcast_ln729_7_fu_3749_p1 <= p_Result_85_fu_3737_p5;
    bitcast_ln729_8_fu_4108_p1 <= p_Result_88_fu_4096_p5;
    bitcast_ln729_fu_1337_p1 <= p_Result_67_fu_1325_p5;
    combined_fu_5739_p2 <= (xor_ln82_fu_5733_p2 xor I2_fu_5714_p3);
    empty_20_fu_971_p2 <= "1" when (unsigned(sub_ln86_fu_965_p2) > unsigned(add_ln53_reg_5883)) else "0";
    empty_fu_953_p2 <= "1" when (signed(total_bits_0_reg_263) > signed(num_bits_read_reg_5841)) else "0";
    exp_tmp_V_fu_580_p4 <= ireg_V_fu_564_p1(62 downto 52);

    grp_fu_294_p1_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state36, sext_ln1192_fu_2574_p1, sext_ln1192_1_fu_4209_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_294_p1 <= sext_ln1192_1_fu_4209_p1(50 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_294_p1 <= sext_ln1192_fu_2574_p1(50 - 1 downto 0);
        else 
            grp_fu_294_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_294_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv95_1FC28F5C28F5) * signed(grp_fu_294_p1))), 95));

    grp_fu_295_p1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state11, ap_CS_fsm_state19, ap_CS_fsm_state35, sext_ln1118_fu_932_p1, sext_ln1118_2_fu_1757_p1, sext_ln1118_4_fu_2563_p1, sext_ln1118_8_fu_4198_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_295_p1 <= sext_ln1118_8_fu_4198_p1(48 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_295_p1 <= sext_ln1118_4_fu_2563_p1(48 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_295_p1 <= sext_ln1118_2_fu_1757_p1(48 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_295_p1 <= sext_ln1118_fu_932_p1(48 - 1 downto 0);
        else 
            grp_fu_295_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_295_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv93_1FC28F5C28F5) * signed(grp_fu_295_p1))), 93));

    grp_fu_296_p0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state20, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_296_p0 <= ap_const_lv93_1FC28F5C28F5(46 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            grp_fu_296_p0 <= ap_const_lv94_1FC28F5C28F5(46 - 1 downto 0);
        else 
            grp_fu_296_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_296_p1_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state20, ap_CS_fsm_state36, sext_ln1192_2_fu_2578_p1, sext_ln1118_6_fu_3392_p1, sext_ln1192_3_fu_4213_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_296_p1 <= sext_ln1192_3_fu_4213_p1(50 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_296_p1 <= sext_ln1118_6_fu_3392_p1(50 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_296_p1 <= sext_ln1192_2_fu_2578_p1(50 - 1 downto 0);
        else 
            grp_fu_296_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_296_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &grp_fu_296_p0) * signed(grp_fu_296_p1))), 94));

    grp_fu_297_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state12, ap_CS_fsm_state20, ap_CS_fsm_state28, ap_CS_fsm_state36, sext_ln1118_1_fu_1000_p1, sext_ln1118_3_fu_1777_p1, sext_ln1118_5_fu_2635_p1, sext_ln1118_7_fu_3412_p1, sext_ln1118_9_fu_4270_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_297_p0 <= sext_ln1118_9_fu_4270_p1(49 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fu_297_p0 <= sext_ln1118_7_fu_3412_p1(49 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_297_p0 <= sext_ln1118_5_fu_2635_p1(49 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_297_p0 <= sext_ln1118_3_fu_1777_p1(49 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_297_p0 <= sext_ln1118_1_fu_1000_p1(49 - 1 downto 0);
        else 
            grp_fu_297_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_297_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state12, ap_CS_fsm_state20, ap_CS_fsm_state28, ap_CS_fsm_state36, sext_ln1116_fu_995_p1, sext_ln1116_1_fu_1772_p1, sext_ln1116_4_fu_2630_p1, sext_ln1116_5_fu_3407_p1, sext_ln1116_8_fu_4265_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_297_p1 <= sext_ln1116_8_fu_4265_p1(93 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fu_297_p1 <= sext_ln1116_5_fu_3407_p1(93 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_297_p1 <= sext_ln1116_4_fu_2630_p1(93 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_297_p1 <= sext_ln1116_1_fu_1772_p1(93 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_297_p1 <= sext_ln1116_fu_995_p1(93 - 1 downto 0);
        else 
            grp_fu_297_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_297_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_297_p0) * signed(grp_fu_297_p1))), 141));

    grp_fu_456_opcode_assign_proc : process(icmp_ln885_reg_5947, ap_CS_fsm_state7, ap_CS_fsm_state10, icmp_ln885_2_reg_6086, ap_CS_fsm_state15, ap_CS_fsm_state18, icmp_ln885_5_reg_6232, ap_CS_fsm_state23, ap_CS_fsm_state26, icmp_ln885_7_reg_6371, ap_CS_fsm_state31, ap_CS_fsm_state34, icmp_ln885_10_reg_6517, ap_CS_fsm_state39, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_fu_456_opcode <= ap_const_lv5_1;
        elsif ((((icmp_ln885_10_reg_6517 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((icmp_ln885_7_reg_6371 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((icmp_ln885_5_reg_6232 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((icmp_ln885_2_reg_6086 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((icmp_ln885_reg_5947 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            grp_fu_456_opcode <= ap_const_lv5_2;
        else 
            grp_fu_456_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_456_p0_assign_proc : process(bitcast_ln729_fu_1337_p1, ap_CS_fsm_state7, bitcast_ln729_1_fu_1696_p1, ap_CS_fsm_state10, bitcast_ln729_2_fu_2114_p1, ap_CS_fsm_state15, bitcast_ln729_3_fu_2473_p1, ap_CS_fsm_state18, bitcast_ln729_5_fu_2972_p1, ap_CS_fsm_state23, bitcast_ln729_6_fu_3331_p1, ap_CS_fsm_state26, bitcast_ln729_7_fu_3749_p1, ap_CS_fsm_state31, bitcast_ln729_8_fu_4108_p1, ap_CS_fsm_state34, bitcast_ln729_10_fu_4607_p1, ap_CS_fsm_state39, bitcast_ln729_4_fu_5314_p1, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_456_p0 <= bitcast_ln729_4_fu_5314_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_456_p0 <= bitcast_ln729_10_fu_4607_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_456_p0 <= bitcast_ln729_8_fu_4108_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_fu_456_p0 <= bitcast_ln729_7_fu_3749_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_456_p0 <= bitcast_ln729_6_fu_3331_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fu_456_p0 <= bitcast_ln729_5_fu_2972_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_456_p0 <= bitcast_ln729_3_fu_2473_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_456_p0 <= bitcast_ln729_2_fu_2114_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_456_p0 <= bitcast_ln729_1_fu_1696_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_456_p0 <= bitcast_ln729_fu_1337_p1;
        else 
            grp_fu_456_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_456_p1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state26, ap_CS_fsm_state31, ap_CS_fsm_state34, ap_CS_fsm_state39, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_fu_456_p1 <= ap_const_lv64_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_fu_456_p1 <= ap_const_lv64_4024000000000000;
        else 
            grp_fu_456_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_462_p0 <= p_Result_91_fu_5441_p5;
    grp_fu_467_p0 <= p_Result_96_fu_5580_p5;
    grp_fu_492_p2 <= std_logic_vector(unsigned(bytes_sent_1_fu_210) + unsigned(ap_const_lv32_1));
    grp_fu_498_p2 <= "1" when (grp_fu_492_p2 = zext_ln39_reg_5873) else "0";
    grp_fu_522_p4 <= grp_fu_294_p2(90 downto 86);
    grp_fu_532_p4 <= grp_fu_294_p2(85 downto 43);
    grp_fu_542_p2 <= "1" when (grp_fu_532_p4 = ap_const_lv43_0) else "0";
    grp_fu_548_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(grp_fu_522_p4));
    grp_fu_558_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(reg_554));
    icmp_ln109_fu_989_p2 <= "1" when (bvh_d_index_fu_206 = ap_const_lv32_7) else "0";
    icmp_ln39_fu_849_p2 <= "1" when (signed(num_bits_read_reg_5841) > signed(ap_const_lv32_0)) else "0";
    icmp_ln53_fu_927_p2 <= "1" when (signed(total_bits_0_reg_263) < signed(num_bits_read_reg_5841)) else "0";
    icmp_ln571_fu_624_p2 <= "1" when (trunc_ln556_fu_568_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_fu_636_p2 <= "1" when (signed(F2_fu_630_p2) > signed(ap_const_lv12_2B)) else "0";
    icmp_ln582_fu_666_p2 <= "1" when (F2_fu_630_p2 = ap_const_lv12_2B) else "0";
    icmp_ln585_fu_676_p2 <= "1" when (unsigned(sh_amt_fu_654_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_fu_682_p2 <= "1" when (unsigned(sh_amt_fu_654_p3) < unsigned(ap_const_lv12_30)) else "0";
    icmp_ln851_1_fu_1810_p2 <= "1" when (trunc_ln851_1_fu_1806_p1 = ap_const_lv43_0) else "0";
    icmp_ln851_3_fu_2668_p2 <= "1" when (trunc_ln851_2_fu_2664_p1 = ap_const_lv43_0) else "0";
    icmp_ln851_4_fu_3445_p2 <= "1" when (trunc_ln851_3_fu_3441_p1 = ap_const_lv43_0) else "0";
    icmp_ln851_6_fu_4303_p2 <= "1" when (trunc_ln851_4_fu_4299_p1 = ap_const_lv43_0) else "0";
    icmp_ln851_fu_1033_p2 <= "1" when (trunc_ln851_fu_1029_p1 = ap_const_lv43_0) else "0";
    icmp_ln86_fu_5756_p0 <= reg_275(32 - 1 downto 0);
    icmp_ln86_fu_5756_p2 <= "1" when (icmp_ln86_fu_5756_p0 = total_bits_reg_5902) else "0";
    icmp_ln885_10_fu_4331_p2 <= "1" when (x_new_V_29_reg_6497 = ap_const_lv48_0) else "0";
    icmp_ln885_11_fu_5689_p2 <= "0" when (tmp_V_53_reg_6565 = ap_const_lv48_0) else "1";
    icmp_ln885_1_fu_1739_p2 <= "0" when (tmp_V_37_reg_5995 = ap_const_lv48_0) else "1";
    icmp_ln885_2_fu_1838_p2 <= "1" when (x_new_V_23_reg_6066 = ap_const_lv48_0) else "0";
    icmp_ln885_3_fu_2516_p2 <= "0" when (tmp_V_40_reg_6134 = ap_const_lv48_0) else "1";
    icmp_ln885_4_fu_5635_p2 <= "0" when (tmp_V_42_reg_6579 = ap_const_lv48_0) else "1";
    icmp_ln885_5_fu_2696_p2 <= "1" when (x_new_V_25_reg_6212 = ap_const_lv48_0) else "0";
    icmp_ln885_6_fu_3374_p2 <= "0" when (tmp_V_45_reg_6280 = ap_const_lv48_0) else "1";
    icmp_ln885_7_fu_3473_p2 <= "1" when (x_new_V_27_reg_6351 = ap_const_lv48_0) else "0";
    icmp_ln885_8_fu_4151_p2 <= "0" when (tmp_V_48_reg_6419 = ap_const_lv48_0) else "1";
    icmp_ln885_9_fu_5662_p2 <= "0" when (tmp_V_50_reg_6617 = ap_const_lv48_0) else "1";
    icmp_ln885_fu_1061_p2 <= "1" when (x_new_V_21_reg_5927 = ap_const_lv48_0) else "0";
    icmp_ln897_10_fu_2764_p2 <= "1" when (signed(tmp_65_fu_2754_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln897_11_fu_2796_p2 <= "0" when (p_Result_43_fu_2790_p2 = ap_const_lv48_0) else "1";
    icmp_ln897_12_fu_3123_p2 <= "1" when (signed(tmp_69_fu_3113_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln897_13_fu_3155_p2 <= "0" when (p_Result_47_fu_3149_p2 = ap_const_lv48_0) else "1";
    icmp_ln897_14_fu_3541_p2 <= "1" when (signed(tmp_74_fu_3531_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln897_15_fu_3573_p2 <= "0" when (p_Result_50_fu_3567_p2 = ap_const_lv48_0) else "1";
    icmp_ln897_16_fu_3900_p2 <= "1" when (signed(tmp_78_fu_3890_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln897_17_fu_3932_p2 <= "0" when (p_Result_54_fu_3926_p2 = ap_const_lv48_0) else "1";
    icmp_ln897_18_fu_4947_p2 <= "1" when (signed(tmp_83_fu_4937_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln897_19_fu_4979_p2 <= "0" when (p_Result_57_fu_4973_p2 = ap_const_lv48_0) else "1";
    icmp_ln897_1_fu_1161_p2 <= "0" when (p_Result_7_fu_1155_p2 = ap_const_lv48_0) else "1";
    icmp_ln897_20_fu_4399_p2 <= "1" when (signed(tmp_88_fu_4389_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln897_21_fu_4431_p2 <= "0" when (p_Result_59_fu_4425_p2 = ap_const_lv48_0) else "1";
    icmp_ln897_22_fu_5106_p2 <= "1" when (signed(tmp_92_fu_5096_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln897_23_fu_5138_p2 <= "0" when (p_Result_62_fu_5132_p2 = ap_const_lv48_0) else "1";
    icmp_ln897_2_fu_1488_p2 <= "1" when (signed(tmp_46_fu_1478_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln897_3_fu_1520_p2 <= "0" when (p_Result_15_fu_1514_p2 = ap_const_lv48_0) else "1";
    icmp_ln897_4_fu_1906_p2 <= "1" when (signed(tmp_51_fu_1896_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln897_5_fu_1938_p2 <= "0" when (p_Result_21_fu_1932_p2 = ap_const_lv48_0) else "1";
    icmp_ln897_6_fu_2265_p2 <= "1" when (signed(tmp_55_fu_2255_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln897_7_fu_2297_p2 <= "0" when (p_Result_33_fu_2291_p2 = ap_const_lv48_0) else "1";
    icmp_ln897_8_fu_4773_p2 <= "1" when (signed(tmp_60_fu_4763_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln897_9_fu_4805_p2 <= "0" when (p_Result_40_fu_4799_p2 = ap_const_lv48_0) else "1";
    icmp_ln897_fu_1129_p2 <= "1" when (signed(tmp_42_fu_1119_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln908_10_fu_4485_p2 <= "1" when (signed(lsb_index_10_fu_4383_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln908_11_fu_5192_p2 <= "1" when (signed(lsb_index_11_fu_5090_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln908_1_fu_1574_p2 <= "1" when (signed(lsb_index_1_fu_1472_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln908_2_fu_1992_p2 <= "1" when (signed(lsb_index_2_fu_1890_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln908_3_fu_2351_p2 <= "1" when (signed(lsb_index_3_fu_2249_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln908_4_fu_4859_p2 <= "1" when (signed(lsb_index_4_fu_4757_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln908_5_fu_2850_p2 <= "1" when (signed(lsb_index_5_fu_2748_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln908_6_fu_3209_p2 <= "1" when (signed(lsb_index_6_fu_3107_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln908_7_fu_3627_p2 <= "1" when (signed(lsb_index_7_fu_3525_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln908_8_fu_3986_p2 <= "1" when (signed(lsb_index_8_fu_3884_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln908_9_fu_5033_p2 <= "1" when (signed(lsb_index_9_fu_4931_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln908_fu_1215_p2 <= "1" when (signed(lsb_index_fu_1113_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln924_10_fu_2987_p2 <= "0" when (add_ln915_5_fu_2947_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln924_11_fu_2993_p2 <= "1" when (trunc_ln924_5_fu_2977_p4 = ap_const_lv52_0) else "0";
    icmp_ln924_12_fu_3346_p2 <= "0" when (add_ln915_6_fu_3306_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln924_13_fu_3352_p2 <= "1" when (trunc_ln924_6_fu_3336_p4 = ap_const_lv52_0) else "0";
    icmp_ln924_14_fu_3764_p2 <= "0" when (add_ln915_7_fu_3724_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln924_15_fu_3770_p2 <= "1" when (trunc_ln924_7_fu_3754_p4 = ap_const_lv52_0) else "0";
    icmp_ln924_16_fu_4123_p2 <= "0" when (add_ln915_8_fu_4083_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln924_17_fu_4129_p2 <= "1" when (trunc_ln924_8_fu_4113_p4 = ap_const_lv52_0) else "0";
    icmp_ln924_18_fu_5468_p2 <= "0" when (add_ln915_9_fu_5428_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln924_19_fu_5474_p2 <= "1" when (trunc_ln924_9_fu_5458_p4 = ap_const_lv52_0) else "0";
    icmp_ln924_1_fu_1358_p2 <= "1" when (trunc_ln5_fu_1342_p4 = ap_const_lv52_0) else "0";
    icmp_ln924_20_fu_4622_p2 <= "0" when (add_ln915_10_fu_4582_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln924_21_fu_4628_p2 <= "1" when (trunc_ln924_s_fu_4612_p4 = ap_const_lv52_0) else "0";
    icmp_ln924_22_fu_5607_p2 <= "0" when (add_ln915_11_fu_5567_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln924_23_fu_5613_p2 <= "1" when (trunc_ln924_10_fu_5597_p4 = ap_const_lv52_0) else "0";
    icmp_ln924_2_fu_1711_p2 <= "0" when (add_ln915_1_fu_1671_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln924_3_fu_1717_p2 <= "1" when (trunc_ln924_1_fu_1701_p4 = ap_const_lv52_0) else "0";
    icmp_ln924_4_fu_2129_p2 <= "0" when (add_ln915_2_fu_2089_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln924_5_fu_2135_p2 <= "1" when (trunc_ln924_2_fu_2119_p4 = ap_const_lv52_0) else "0";
    icmp_ln924_6_fu_2488_p2 <= "0" when (add_ln915_3_fu_2448_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln924_7_fu_2494_p2 <= "1" when (trunc_ln924_3_fu_2478_p4 = ap_const_lv52_0) else "0";
    icmp_ln924_8_fu_5329_p2 <= "0" when (add_ln915_4_fu_5289_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln924_9_fu_5335_p2 <= "1" when (trunc_ln924_4_fu_5319_p4 = ap_const_lv52_0) else "0";
    icmp_ln924_fu_1352_p2 <= "0" when (add_ln915_fu_1312_p2 = ap_const_lv11_7FF) else "1";
    ireg_V_fu_564_p1 <= seed;
    l_10_fu_4373_p1 <= tmp_1_fu_4365_p3(32 - 1 downto 0);
    l_11_fu_5080_p1 <= tmp_10_fu_5072_p3(32 - 1 downto 0);
    l_1_fu_1462_p1 <= tmp_2_fu_1454_p3(32 - 1 downto 0);
    l_2_fu_1880_p1 <= tmp_3_fu_1872_p3(32 - 1 downto 0);
    l_3_fu_2239_p1 <= tmp_4_fu_2231_p3(32 - 1 downto 0);
    l_4_fu_4747_p1 <= tmp_5_fu_4739_p3(32 - 1 downto 0);
    l_5_fu_2738_p1 <= tmp_6_fu_2730_p3(32 - 1 downto 0);
    l_6_fu_3097_p1 <= tmp_7_fu_3089_p3(32 - 1 downto 0);
    l_7_fu_3515_p1 <= tmp_8_fu_3507_p3(32 - 1 downto 0);
    l_8_fu_3874_p1 <= tmp_9_fu_3866_p3(32 - 1 downto 0);
    l_9_fu_4921_p1 <= tmp_s_fu_4913_p3(32 - 1 downto 0);
    l_fu_1103_p1 <= tmp_fu_1095_p3(32 - 1 downto 0);
        lhs_V_3_fu_4169_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_log_iter3_V_fu_4162_p3),49));

        lhs_V_fu_2534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_log_iter1_V_fu_2527_p3),49));

    lsb_index_10_fu_4383_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_10_fu_4377_p2));
    lsb_index_11_fu_5090_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_11_fu_5084_p2));
    lsb_index_1_fu_1472_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_1_fu_1466_p2));
    lsb_index_2_fu_1890_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_2_fu_1884_p2));
    lsb_index_3_fu_2249_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_3_fu_2243_p2));
    lsb_index_4_fu_4757_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_4_fu_4751_p2));
    lsb_index_5_fu_2748_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_5_fu_2742_p2));
    lsb_index_6_fu_3107_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_6_fu_3101_p2));
    lsb_index_7_fu_3525_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_7_fu_3519_p2));
    lsb_index_8_fu_3884_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_8_fu_3878_p2));
    lsb_index_9_fu_4931_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_9_fu_4925_p2));
    lsb_index_fu_1113_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_fu_1107_p2));
    lshr_ln897_10_fu_4419_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln897_10_fu_4415_p1(31-1 downto 0)))));
    lshr_ln897_11_fu_5126_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln897_11_fu_5122_p1(31-1 downto 0)))));
    lshr_ln897_1_fu_1508_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln897_1_fu_1504_p1(31-1 downto 0)))));
    lshr_ln897_2_fu_1926_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln897_2_fu_1922_p1(31-1 downto 0)))));
    lshr_ln897_3_fu_2285_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln897_3_fu_2281_p1(31-1 downto 0)))));
    lshr_ln897_4_fu_4793_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln897_4_fu_4789_p1(31-1 downto 0)))));
    lshr_ln897_5_fu_2784_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln897_5_fu_2780_p1(31-1 downto 0)))));
    lshr_ln897_6_fu_3143_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln897_6_fu_3139_p1(31-1 downto 0)))));
    lshr_ln897_7_fu_3561_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln897_7_fu_3557_p1(31-1 downto 0)))));
    lshr_ln897_8_fu_3920_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln897_8_fu_3916_p1(31-1 downto 0)))));
    lshr_ln897_9_fu_4967_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln897_9_fu_4963_p1(31-1 downto 0)))));
    lshr_ln897_fu_1149_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv48_FFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln897_fu_1145_p1(31-1 downto 0)))));
    lshr_ln89_fu_5761_p2 <= std_logic_vector(shift_right(unsigned(val_reg_6732),to_integer(unsigned('0' & b_fu_5750_p2(31-1 downto 0)))));
    lshr_ln908_10_fu_4507_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_52_reg_6523),to_integer(unsigned('0' & zext_ln908_32_fu_4503_p1(31-1 downto 0)))));
    lshr_ln908_11_fu_5492_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_54_reg_6655),to_integer(unsigned('0' & zext_ln908_34_fu_5488_p1(31-1 downto 0)))));
    lshr_ln908_1_fu_1596_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_38_reg_6009),to_integer(unsigned('0' & zext_ln908_4_fu_1592_p1(31-1 downto 0)))));
    lshr_ln908_2_fu_2014_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_39_reg_6092),to_integer(unsigned('0' & zext_ln908_8_fu_2010_p1(31-1 downto 0)))));
    lshr_ln908_3_fu_2373_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_41_reg_6148),to_integer(unsigned('0' & zext_ln908_12_fu_2369_p1(31-1 downto 0)))));
    lshr_ln908_4_fu_5214_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_43_reg_6590),to_integer(unsigned('0' & zext_ln908_16_fu_5210_p1(31-1 downto 0)))));
    lshr_ln908_5_fu_2872_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_44_reg_6238),to_integer(unsigned('0' & zext_ln908_20_fu_2868_p1(31-1 downto 0)))));
    lshr_ln908_6_fu_3231_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_46_reg_6294),to_integer(unsigned('0' & zext_ln908_24_fu_3227_p1(31-1 downto 0)))));
    lshr_ln908_7_fu_3649_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_47_reg_6377),to_integer(unsigned('0' & zext_ln908_26_fu_3645_p1(31-1 downto 0)))));
    lshr_ln908_8_fu_4008_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_49_reg_6433),to_integer(unsigned('0' & zext_ln908_28_fu_4004_p1(31-1 downto 0)))));
    lshr_ln908_9_fu_5353_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_51_reg_6628),to_integer(unsigned('0' & zext_ln908_30_fu_5349_p1(31-1 downto 0)))));
    lshr_ln908_fu_1237_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_36_reg_5953),to_integer(unsigned('0' & zext_ln908_fu_1233_p1(31-1 downto 0)))));
    m_102_fu_4495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_52_reg_6523),64));
    m_103_fu_4531_p3 <= 
        zext_ln908_33_fu_4512_p1 when (icmp_ln908_10_reg_6540(0) = '1') else 
        shl_ln908_10_fu_4525_p2;
    m_104_fu_4541_p2 <= std_logic_vector(unsigned(zext_ln911_10_fu_4538_p1) + unsigned(m_103_fu_4531_p3));
    m_107_fu_5480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_54_reg_6655),64));
    m_108_fu_5516_p3 <= 
        zext_ln908_35_fu_5497_p1 when (icmp_ln908_11_reg_6672(0) = '1') else 
        shl_ln908_11_fu_5510_p2;
    m_109_fu_5526_p2 <= std_logic_vector(unsigned(zext_ln911_11_fu_5523_p1) + unsigned(m_108_fu_5516_p3));
    m_10_fu_3689_p4 <= m_89_fu_3683_p2(63 downto 1);
    m_112_fu_1287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_s_fu_1277_p4),64));
    m_113_fu_1646_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_3_fu_1636_p4),64));
    m_114_fu_2064_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_8_fu_2054_p4),64));
    m_115_fu_2423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_4_fu_2413_p4),64));
    m_116_fu_5264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_5_fu_5254_p4),64));
    m_117_fu_2922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_6_fu_2912_p4),64));
    m_118_fu_3281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_7_fu_3271_p4),64));
    m_119_fu_3699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_10_fu_3689_p4),64));
    m_11_fu_4048_p4 <= m_94_fu_4042_p2(63 downto 1);
    m_120_fu_4058_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_11_fu_4048_p4),64));
    m_121_fu_5403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_12_fu_5393_p4),64));
    m_122_fu_4557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_13_fu_4547_p4),64));
    m_123_fu_5542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_15_fu_5532_p4),64));
    m_12_fu_5393_p4 <= m_99_fu_5387_p2(63 downto 1);
    m_13_fu_4547_p4 <= m_104_fu_4541_p2(63 downto 1);
    m_14_fu_1584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_38_reg_6009),64));
    m_15_fu_5532_p4 <= m_109_fu_5526_p2(63 downto 1);
    m_19_fu_1620_p3 <= 
        zext_ln908_6_fu_1601_p1 when (icmp_ln908_1_reg_6026(0) = '1') else 
        shl_ln908_1_fu_1614_p2;
    m_1_fu_1261_p3 <= 
        zext_ln908_2_fu_1242_p1 when (icmp_ln908_reg_5970(0) = '1') else 
        shl_ln908_fu_1255_p2;
    m_24_fu_1630_p2 <= std_logic_vector(unsigned(zext_ln911_1_fu_1627_p1) + unsigned(m_19_fu_1620_p3));
    m_2_fu_1271_p2 <= std_logic_vector(unsigned(zext_ln911_fu_1268_p1) + unsigned(m_1_fu_1261_p3));
    m_39_fu_2002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_39_reg_6092),64));
    m_3_fu_1636_p4 <= m_24_fu_1630_p2(63 downto 1);
    m_44_fu_2038_p3 <= 
        zext_ln908_10_fu_2019_p1 when (icmp_ln908_2_reg_6109(0) = '1') else 
        shl_ln908_2_fu_2032_p2;
    m_49_fu_2048_p2 <= std_logic_vector(unsigned(zext_ln911_2_fu_2045_p1) + unsigned(m_44_fu_2038_p3));
    m_4_fu_2413_p4 <= m_61_fu_2407_p2(63 downto 1);
    m_59_fu_2361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_41_reg_6148),64));
    m_5_fu_5254_p4 <= m_74_fu_5248_p2(63 downto 1);
    m_60_fu_2397_p3 <= 
        zext_ln908_14_fu_2378_p1 when (icmp_ln908_3_reg_6165(0) = '1') else 
        shl_ln908_3_fu_2391_p2;
    m_61_fu_2407_p2 <= std_logic_vector(unsigned(zext_ln911_3_fu_2404_p1) + unsigned(m_60_fu_2397_p3));
    m_6_fu_2912_p4 <= m_79_fu_2906_p2(63 downto 1);
    m_72_fu_5202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_43_reg_6590),64));
    m_73_fu_5238_p3 <= 
        zext_ln908_18_fu_5219_p1 when (icmp_ln908_4_reg_6607(0) = '1') else 
        shl_ln908_4_fu_5232_p2;
    m_74_fu_5248_p2 <= std_logic_vector(unsigned(zext_ln911_4_fu_5245_p1) + unsigned(m_73_fu_5238_p3));
    m_77_fu_2860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_44_reg_6238),64));
    m_78_fu_2896_p3 <= 
        zext_ln908_22_fu_2877_p1 when (icmp_ln908_5_reg_6255(0) = '1') else 
        shl_ln908_5_fu_2890_p2;
    m_79_fu_2906_p2 <= std_logic_vector(unsigned(zext_ln911_5_fu_2903_p1) + unsigned(m_78_fu_2896_p3));
    m_7_fu_3271_p4 <= m_84_fu_3265_p2(63 downto 1);
    m_82_fu_3219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_46_reg_6294),64));
    m_83_fu_3255_p3 <= 
        zext_ln908_25_fu_3236_p1 when (icmp_ln908_6_reg_6311(0) = '1') else 
        shl_ln908_6_fu_3249_p2;
    m_84_fu_3265_p2 <= std_logic_vector(unsigned(zext_ln911_6_fu_3262_p1) + unsigned(m_83_fu_3255_p3));
    m_87_fu_3637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_47_reg_6377),64));
    m_88_fu_3673_p3 <= 
        zext_ln908_27_fu_3654_p1 when (icmp_ln908_7_reg_6394(0) = '1') else 
        shl_ln908_7_fu_3667_p2;
    m_89_fu_3683_p2 <= std_logic_vector(unsigned(zext_ln911_7_fu_3680_p1) + unsigned(m_88_fu_3673_p3));
    m_8_fu_2054_p4 <= m_49_fu_2048_p2(63 downto 1);
    m_92_fu_3996_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_49_reg_6433),64));
    m_93_fu_4032_p3 <= 
        zext_ln908_29_fu_4013_p1 when (icmp_ln908_8_reg_6450(0) = '1') else 
        shl_ln908_8_fu_4026_p2;
    m_94_fu_4042_p2 <= std_logic_vector(unsigned(zext_ln911_8_fu_4039_p1) + unsigned(m_93_fu_4032_p3));
    m_97_fu_5341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_51_reg_6628),64));
    m_98_fu_5377_p3 <= 
        zext_ln908_31_fu_5358_p1 when (icmp_ln908_9_reg_6645(0) = '1') else 
        shl_ln908_9_fu_5371_p2;
    m_99_fu_5387_p2 <= std_logic_vector(unsigned(zext_ln911_9_fu_5384_p1) + unsigned(m_98_fu_5377_p3));
    m_fu_1225_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_36_reg_5953),64));
    m_s_fu_1277_p4 <= m_2_fu_1271_p2(63 downto 1);
    man_V_1_fu_610_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_65_fu_606_p1));
    man_V_2_fu_616_p3 <= 
        man_V_1_fu_610_p2 when (p_Result_64_fu_572_p3(0) = '1') else 
        p_Result_65_fu_606_p1;
    mask_fu_921_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(shl_ln83_fu_916_p2));
    or_ln581_fu_776_p2 <= (or_ln582_fu_740_p2 or icmp_ln581_fu_636_p2);
    or_ln582_fu_740_p2 <= (icmp_ln582_fu_666_p2 or icmp_ln571_fu_624_p2);
    or_ln603_1_fu_816_p2 <= (and_ln585_fu_758_p2 or and_ln582_fu_734_p2);
    or_ln603_2_fu_830_p2 <= (or_ln603_fu_802_p2 or or_ln603_1_fu_816_p2);
    or_ln603_fu_802_p2 <= (and_ln603_fu_788_p2 or and_ln585_1_fu_770_p2);
    or_ln899_10_fu_5184_p3 <= (ap_const_lv31_0 & or_ln899_21_fu_5178_p2);
    or_ln899_11_fu_1201_p2 <= (and_ln899_fu_1195_p2 or a_fu_1167_p2);
    or_ln899_12_fu_1978_p2 <= (and_ln899_2_fu_1972_p2 or a_2_fu_1944_p2);
    or_ln899_13_fu_2337_p2 <= (and_ln899_3_fu_2331_p2 or a_3_fu_2303_p2);
    or_ln899_14_fu_4845_p2 <= (and_ln899_4_fu_4839_p2 or a_4_fu_4811_p2);
    or_ln899_15_fu_2836_p2 <= (and_ln899_5_fu_2830_p2 or a_5_fu_2802_p2);
    or_ln899_16_fu_3195_p2 <= (and_ln899_6_fu_3189_p2 or a_6_fu_3161_p2);
    or_ln899_17_fu_3613_p2 <= (and_ln899_7_fu_3607_p2 or a_7_fu_3579_p2);
    or_ln899_18_fu_3972_p2 <= (and_ln899_8_fu_3966_p2 or a_8_fu_3938_p2);
    or_ln899_19_fu_5019_p2 <= (and_ln899_9_fu_5013_p2 or a_9_fu_4985_p2);
    or_ln899_1_fu_1566_p3 <= (ap_const_lv31_0 & or_ln899_fu_1560_p2);
    or_ln899_20_fu_4471_p2 <= (and_ln899_10_fu_4465_p2 or a_10_fu_4437_p2);
    or_ln899_21_fu_5178_p2 <= (and_ln899_11_fu_5172_p2 or a_11_fu_5144_p2);
    or_ln899_2_fu_1984_p3 <= (ap_const_lv31_0 & or_ln899_12_fu_1978_p2);
    or_ln899_3_fu_2343_p3 <= (ap_const_lv31_0 & or_ln899_13_fu_2337_p2);
    or_ln899_4_fu_4851_p3 <= (ap_const_lv31_0 & or_ln899_14_fu_4845_p2);
    or_ln899_5_fu_2842_p3 <= (ap_const_lv31_0 & or_ln899_15_fu_2836_p2);
    or_ln899_6_fu_3201_p3 <= (ap_const_lv31_0 & or_ln899_16_fu_3195_p2);
    or_ln899_7_fu_3619_p3 <= (ap_const_lv31_0 & or_ln899_17_fu_3613_p2);
    or_ln899_8_fu_3978_p3 <= (ap_const_lv31_0 & or_ln899_18_fu_3972_p2);
    or_ln899_9_fu_5025_p3 <= (ap_const_lv31_0 & or_ln899_19_fu_5019_p2);
    or_ln899_fu_1560_p2 <= (and_ln899_1_fu_1554_p2 or a_1_fu_1526_p2);
    or_ln899_s_fu_4477_p3 <= (ap_const_lv31_0 & or_ln899_20_fu_4471_p2);
    or_ln924_10_fu_4634_p2 <= (icmp_ln924_21_reg_6560 or icmp_ln924_20_reg_6555);
    or_ln924_11_fu_5673_p2 <= (icmp_ln924_23_reg_6722 or icmp_ln924_22_reg_6717);
    or_ln924_1_fu_1723_p2 <= (icmp_ln924_3_reg_6046 or icmp_ln924_2_reg_6041);
    or_ln924_2_fu_2141_p2 <= (icmp_ln924_5_reg_6129 or icmp_ln924_4_reg_6124);
    or_ln924_3_fu_2500_p2 <= (icmp_ln924_7_reg_6185 or icmp_ln924_6_reg_6180);
    or_ln924_4_fu_5619_p2 <= (icmp_ln924_9_reg_6692 or icmp_ln924_8_reg_6687);
    or_ln924_5_fu_2999_p2 <= (icmp_ln924_11_reg_6275 or icmp_ln924_10_reg_6270);
    or_ln924_6_fu_3358_p2 <= (icmp_ln924_13_reg_6331 or icmp_ln924_12_reg_6326);
    or_ln924_7_fu_3776_p2 <= (icmp_ln924_15_reg_6414 or icmp_ln924_14_reg_6409);
    or_ln924_8_fu_4135_p2 <= (icmp_ln924_17_reg_6470 or icmp_ln924_16_reg_6465);
    or_ln924_9_fu_5646_p2 <= (icmp_ln924_19_reg_6707 or icmp_ln924_18_reg_6702);
    or_ln924_fu_1364_p2 <= (icmp_ln924_reg_5985 or icmp_ln924_1_reg_5990);
    or_ln_fu_1207_p3 <= (ap_const_lv31_0 & or_ln899_11_fu_1201_p2);
    out_stream_TDATA <= out_stream_V_data_V_1_data_out;

    out_stream_TDATA_blk_n_assign_proc : process(out_stream_V_data_V_1_state, ap_CS_fsm_state44, icmp_ln86_fu_5756_p2, tmp_96_fu_5797_p3, ap_CS_fsm_state45, tmp_96_reg_6755, ap_CS_fsm_state3, icmp_ln53_fu_927_p2, icmp_ln109_fu_989_p2, ap_CS_fsm_state46, icmp_ln109_reg_5908)
    begin
        if ((((icmp_ln109_reg_5908 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46)) or ((icmp_ln109_fu_989_p2 = ap_const_lv1_0) and (icmp_ln53_fu_927_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_96_reg_6755 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state45)) or ((tmp_96_fu_5797_p3 = ap_const_lv1_1) and (icmp_ln86_fu_5756_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
            out_stream_TDATA_blk_n <= out_stream_V_data_V_1_state(1);
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_stream_TKEEP <= out_stream_V_keep_V_1_data_out;
    out_stream_TLAST <= out_stream_V_last_V_1_data_out;
    out_stream_TSTRB <= out_stream_V_strb_V_1_data_out;
    out_stream_TVALID <= out_stream_V_last_V_1_state(0);
    out_stream_V_data_V_1_ack_in <= out_stream_V_data_V_1_state(1);
    out_stream_V_data_V_1_ack_out <= out_stream_TREADY;

    out_stream_V_data_V_1_data_in_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state3, ap_predicate_op152_write_state3, ap_predicate_op1008_write_state44, p_Result_97_fu_5774_p4, tmp_data_V_fu_214)
    begin
        if (((ap_predicate_op1008_write_state44 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            out_stream_V_data_V_1_data_in <= p_Result_97_fu_5774_p4;
        elsif (((ap_predicate_op152_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            out_stream_V_data_V_1_data_in <= tmp_data_V_fu_214;
        else 
            out_stream_V_data_V_1_data_in <= "XXXXXXXX";
        end if; 
    end process;


    out_stream_V_data_V_1_data_out_assign_proc : process(out_stream_V_data_V_1_payload_A, out_stream_V_data_V_1_payload_B, out_stream_V_data_V_1_sel)
    begin
        if ((out_stream_V_data_V_1_sel = ap_const_logic_1)) then 
            out_stream_V_data_V_1_data_out <= out_stream_V_data_V_1_payload_B;
        else 
            out_stream_V_data_V_1_data_out <= out_stream_V_data_V_1_payload_A;
        end if; 
    end process;

    out_stream_V_data_V_1_load_A <= (out_stream_V_data_V_1_state_cmp_full and not(out_stream_V_data_V_1_sel_wr));
    out_stream_V_data_V_1_load_B <= (out_stream_V_data_V_1_state_cmp_full and out_stream_V_data_V_1_sel_wr);
    out_stream_V_data_V_1_sel <= out_stream_V_data_V_1_sel_rd;
    out_stream_V_data_V_1_state_cmp_full <= '0' when (out_stream_V_data_V_1_state = ap_const_lv2_1) else '1';

    out_stream_V_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state3, ap_predicate_op152_write_state3, ap_block_state3_io, ap_predicate_op1008_write_state44, ap_block_state44_io)
    begin
        if ((((ap_predicate_op152_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state44_io) and (ap_predicate_op1008_write_state44 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
            out_stream_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_V_data_V_1_vld_out <= out_stream_V_data_V_1_state(0);
    out_stream_V_keep_V_1_ack_out <= out_stream_TREADY;
    out_stream_V_keep_V_1_data_out <= ap_const_lv1_1;
    out_stream_V_keep_V_1_sel <= out_stream_V_keep_V_1_sel_rd;

    out_stream_V_keep_V_1_vld_in_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state3, ap_predicate_op152_write_state3, ap_block_state3_io, ap_predicate_op1008_write_state44, ap_block_state44_io)
    begin
        if ((((ap_predicate_op152_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state44_io) and (ap_predicate_op1008_write_state44 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
            out_stream_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_V_keep_V_1_vld_out <= out_stream_V_keep_V_1_state(0);
    out_stream_V_last_V_1_ack_in <= out_stream_V_last_V_1_state(1);
    out_stream_V_last_V_1_ack_out <= out_stream_TREADY;

    out_stream_V_last_V_1_data_out_assign_proc : process(out_stream_V_last_V_1_payload_A, out_stream_V_last_V_1_payload_B, out_stream_V_last_V_1_sel)
    begin
        if ((out_stream_V_last_V_1_sel = ap_const_logic_1)) then 
            out_stream_V_last_V_1_data_out <= out_stream_V_last_V_1_payload_B;
        else 
            out_stream_V_last_V_1_data_out <= out_stream_V_last_V_1_payload_A;
        end if; 
    end process;

    out_stream_V_last_V_1_load_A <= (out_stream_V_last_V_1_state_cmp_full and not(out_stream_V_last_V_1_sel_wr));
    out_stream_V_last_V_1_load_B <= (out_stream_V_last_V_1_state_cmp_full and out_stream_V_last_V_1_sel_wr);
    out_stream_V_last_V_1_sel <= out_stream_V_last_V_1_sel_rd;
    out_stream_V_last_V_1_state_cmp_full <= '0' when (out_stream_V_last_V_1_state = ap_const_lv2_1) else '1';

    out_stream_V_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state3, ap_predicate_op152_write_state3, ap_block_state3_io, ap_predicate_op1008_write_state44, ap_block_state44_io)
    begin
        if ((((ap_predicate_op152_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state44_io) and (ap_predicate_op1008_write_state44 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
            out_stream_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_V_last_V_1_vld_out <= out_stream_V_last_V_1_state(0);
    out_stream_V_strb_V_1_ack_out <= out_stream_TREADY;
    out_stream_V_strb_V_1_data_out <= ap_const_lv1_0;
    out_stream_V_strb_V_1_sel <= out_stream_V_strb_V_1_sel_rd;

    out_stream_V_strb_V_1_vld_in_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state3, ap_predicate_op152_write_state3, ap_block_state3_io, ap_predicate_op1008_write_state44, ap_block_state44_io)
    begin
        if ((((ap_predicate_op152_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state44_io) and (ap_predicate_op1008_write_state44 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
            out_stream_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            out_stream_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_V_strb_V_1_vld_out <= out_stream_V_strb_V_1_state(0);
    p_Repl2_11_fu_5770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bit_V_fu_5766_p1),64));
    p_Result_10_fu_1011_p3 <= x_new_V_21_fu_1004_p3(47 downto 47);
    p_Result_12_fu_2822_p3 <= tmp_V_44_fu_2706_p3(to_integer(unsigned(lsb_index_5_fu_2748_p2)) downto to_integer(unsigned(lsb_index_5_fu_2748_p2))) when (to_integer(unsigned(lsb_index_5_fu_2748_p2))>= 0 and to_integer(unsigned(lsb_index_5_fu_2748_p2))<=47) else "-";
    
    p_Result_14_fu_3071_p4_proc : process(tmp_V_46_fu_3065_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable p_Result_14_fu_3071_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_2F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_46_fu_3065_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_2F(6-1 downto 0)));
            for p_Result_14_fu_3071_p4_i in 0 to 48-1 loop
                v0_cpy(p_Result_14_fu_3071_p4_i) := tmp_V_46_fu_3065_p3(48-1-p_Result_14_fu_3071_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(48-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_14_fu_3071_p4 <= resvalue(48-1 downto 0);
    end process;

    p_Result_15_fu_1514_p2 <= (tmp_V_38_fu_1430_p3 and lshr_ln897_1_fu_1508_p2);
    p_Result_17_fu_3181_p3 <= tmp_V_46_fu_3065_p3(to_integer(unsigned(lsb_index_6_fu_3107_p2)) downto to_integer(unsigned(lsb_index_6_fu_3107_p2))) when (to_integer(unsigned(lsb_index_6_fu_3107_p2))>= 0 and to_integer(unsigned(lsb_index_6_fu_3107_p2))<=47) else "-";
    
    p_Result_19_fu_1854_p4_proc : process(tmp_V_39_fu_1848_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable p_Result_19_fu_1854_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_2F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_39_fu_1848_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_2F(6-1 downto 0)));
            for p_Result_19_fu_1854_p4_i in 0 to 48-1 loop
                v0_cpy(p_Result_19_fu_1854_p4_i) := tmp_V_39_fu_1848_p3(48-1-p_Result_19_fu_1854_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(48-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_19_fu_1854_p4 <= resvalue(48-1 downto 0);
    end process;

    
    p_Result_1_fu_4721_p4_proc : process(tmp_V_43_fu_4713_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable p_Result_1_fu_4721_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_2F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_43_fu_4713_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_2F(6-1 downto 0)));
            for p_Result_1_fu_4721_p4_i in 0 to 48-1 loop
                v0_cpy(p_Result_1_fu_4721_p4_i) := tmp_V_43_fu_4713_p3(48-1-p_Result_1_fu_4721_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(48-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_1_fu_4721_p4 <= resvalue(48-1 downto 0);
    end process;

    
    p_Result_20_fu_3489_p4_proc : process(tmp_V_47_fu_3483_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable p_Result_20_fu_3489_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_2F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_47_fu_3483_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_2F(6-1 downto 0)));
            for p_Result_20_fu_3489_p4_i in 0 to 48-1 loop
                v0_cpy(p_Result_20_fu_3489_p4_i) := tmp_V_47_fu_3483_p3(48-1-p_Result_20_fu_3489_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(48-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_20_fu_3489_p4 <= resvalue(48-1 downto 0);
    end process;

    p_Result_21_fu_1932_p2 <= (tmp_V_39_fu_1848_p3 and lshr_ln897_2_fu_1926_p2);
    p_Result_23_fu_1964_p3 <= tmp_V_39_fu_1848_p3(to_integer(unsigned(lsb_index_2_fu_1890_p2)) downto to_integer(unsigned(lsb_index_2_fu_1890_p2))) when (to_integer(unsigned(lsb_index_2_fu_1890_p2))>= 0 and to_integer(unsigned(lsb_index_2_fu_1890_p2))<=47) else "-";
    p_Result_24_fu_3599_p3 <= tmp_V_47_fu_3483_p3(to_integer(unsigned(lsb_index_7_fu_3525_p2)) downto to_integer(unsigned(lsb_index_7_fu_3525_p2))) when (to_integer(unsigned(lsb_index_7_fu_3525_p2))>= 0 and to_integer(unsigned(lsb_index_7_fu_3525_p2))<=47) else "-";
    
    p_Result_26_fu_3848_p4_proc : process(tmp_V_49_fu_3842_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable p_Result_26_fu_3848_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_2F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_49_fu_3842_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_2F(6-1 downto 0)));
            for p_Result_26_fu_3848_p4_i in 0 to 48-1 loop
                v0_cpy(p_Result_26_fu_3848_p4_i) := tmp_V_49_fu_3842_p3(48-1-p_Result_26_fu_3848_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(48-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_26_fu_3848_p4 <= resvalue(48-1 downto 0);
    end process;

    p_Result_27_fu_1788_p3 <= x_new_V_23_fu_1781_p3(47 downto 47);
    p_Result_29_fu_3958_p3 <= tmp_V_49_fu_3842_p3(to_integer(unsigned(lsb_index_8_fu_3884_p2)) downto to_integer(unsigned(lsb_index_8_fu_3884_p2))) when (to_integer(unsigned(lsb_index_8_fu_3884_p2))>= 0 and to_integer(unsigned(lsb_index_8_fu_3884_p2))<=47) else "-";
    
    p_Result_2_fu_1436_p4_proc : process(tmp_V_38_fu_1430_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable p_Result_2_fu_1436_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_2F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_38_fu_1430_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_2F(6-1 downto 0)));
            for p_Result_2_fu_1436_p4_i in 0 to 48-1 loop
                v0_cpy(p_Result_2_fu_1436_p4_i) := tmp_V_38_fu_1430_p3(48-1-p_Result_2_fu_1436_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(48-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_2_fu_1436_p4 <= resvalue(48-1 downto 0);
    end process;

    
    p_Result_30_fu_2213_p4_proc : process(tmp_V_41_fu_2207_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable p_Result_30_fu_2213_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_2F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_41_fu_2207_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_2F(6-1 downto 0)));
            for p_Result_30_fu_2213_p4_i in 0 to 48-1 loop
                v0_cpy(p_Result_30_fu_2213_p4_i) := tmp_V_41_fu_2207_p3(48-1-p_Result_30_fu_2213_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(48-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_30_fu_2213_p4 <= resvalue(48-1 downto 0);
    end process;

    p_Result_33_fu_2291_p2 <= (tmp_V_41_fu_2207_p3 and lshr_ln897_3_fu_2285_p2);
    
    p_Result_34_fu_4895_p4_proc : process(tmp_V_51_fu_4887_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable p_Result_34_fu_4895_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_2F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_51_fu_4887_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_2F(6-1 downto 0)));
            for p_Result_34_fu_4895_p4_i in 0 to 48-1 loop
                v0_cpy(p_Result_34_fu_4895_p4_i) := tmp_V_51_fu_4887_p3(48-1-p_Result_34_fu_4895_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(48-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_34_fu_4895_p4 <= resvalue(48-1 downto 0);
    end process;

    p_Result_35_fu_2323_p3 <= tmp_V_41_fu_2207_p3(to_integer(unsigned(lsb_index_3_fu_2249_p2)) downto to_integer(unsigned(lsb_index_3_fu_2249_p2))) when (to_integer(unsigned(lsb_index_3_fu_2249_p2))>= 0 and to_integer(unsigned(lsb_index_3_fu_2249_p2))<=47) else "-";
    p_Result_37_fu_2592_p3 <= grp_fu_296_p2(90 downto 90);
    p_Result_38_fu_5005_p3 <= tmp_V_51_fu_4887_p3(to_integer(unsigned(lsb_index_9_fu_4931_p2)) downto to_integer(unsigned(lsb_index_9_fu_4931_p2))) when (to_integer(unsigned(lsb_index_9_fu_4931_p2))>= 0 and to_integer(unsigned(lsb_index_9_fu_4931_p2))<=47) else "-";
    p_Result_40_fu_4799_p2 <= (tmp_V_43_fu_4713_p3 and lshr_ln897_4_fu_4793_p2);
    
    p_Result_41_fu_4347_p4_proc : process(tmp_V_52_fu_4341_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable p_Result_41_fu_4347_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_2F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_52_fu_4341_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_2F(6-1 downto 0)));
            for p_Result_41_fu_4347_p4_i in 0 to 48-1 loop
                v0_cpy(p_Result_41_fu_4347_p4_i) := tmp_V_52_fu_4341_p3(48-1-p_Result_41_fu_4347_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(48-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_41_fu_4347_p4 <= resvalue(48-1 downto 0);
    end process;

    p_Result_43_fu_2790_p2 <= (tmp_V_44_fu_2706_p3 and lshr_ln897_5_fu_2784_p2);
    p_Result_44_fu_4457_p3 <= tmp_V_52_fu_4341_p3(to_integer(unsigned(lsb_index_10_fu_4383_p2)) downto to_integer(unsigned(lsb_index_10_fu_4383_p2))) when (to_integer(unsigned(lsb_index_10_fu_4383_p2))>= 0 and to_integer(unsigned(lsb_index_10_fu_4383_p2))<=47) else "-";
    p_Result_45_fu_2646_p3 <= x_new_V_25_fu_2639_p3(47 downto 47);
    p_Result_47_fu_3149_p2 <= (tmp_V_46_fu_3065_p3 and lshr_ln897_6_fu_3143_p2);
    
    p_Result_48_fu_5054_p4_proc : process(tmp_V_54_fu_5048_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable p_Result_48_fu_5054_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_2F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_54_fu_5048_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_2F(6-1 downto 0)));
            for p_Result_48_fu_5054_p4_i in 0 to 48-1 loop
                v0_cpy(p_Result_48_fu_5054_p4_i) := tmp_V_54_fu_5048_p3(48-1-p_Result_48_fu_5054_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(48-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_48_fu_5054_p4 <= resvalue(48-1 downto 0);
    end process;

    p_Result_4_fu_4831_p3 <= tmp_V_43_fu_4713_p3(to_integer(unsigned(lsb_index_4_fu_4757_p2)) downto to_integer(unsigned(lsb_index_4_fu_4757_p2))) when (to_integer(unsigned(lsb_index_4_fu_4757_p2))>= 0 and to_integer(unsigned(lsb_index_4_fu_4757_p2))<=47) else "-";
    p_Result_50_fu_3567_p2 <= (tmp_V_47_fu_3483_p3 and lshr_ln897_7_fu_3561_p2);
    p_Result_51_fu_3423_p3 <= x_new_V_27_fu_3416_p3(47 downto 47);
    p_Result_52_fu_5164_p3 <= tmp_V_54_fu_5048_p3(to_integer(unsigned(lsb_index_11_fu_5090_p2)) downto to_integer(unsigned(lsb_index_11_fu_5090_p2))) when (to_integer(unsigned(lsb_index_11_fu_5090_p2))>= 0 and to_integer(unsigned(lsb_index_11_fu_5090_p2))<=47) else "-";
    p_Result_54_fu_3926_p2 <= (tmp_V_49_fu_3842_p3 and lshr_ln897_8_fu_3920_p2);
    p_Result_55_fu_4227_p3 <= grp_fu_296_p2(90 downto 90);
    p_Result_57_fu_4973_p2 <= (tmp_V_51_fu_4887_p3 and lshr_ln897_9_fu_4967_p2);
    p_Result_59_fu_4425_p2 <= (tmp_V_52_fu_4341_p3 and lshr_ln897_10_fu_4419_p2);
    p_Result_5_fu_1187_p3 <= tmp_V_36_fu_1071_p3(to_integer(unsigned(lsb_index_fu_1113_p2)) downto to_integer(unsigned(lsb_index_fu_1113_p2))) when (to_integer(unsigned(lsb_index_fu_1113_p2))>= 0 and to_integer(unsigned(lsb_index_fu_1113_p2))<=47) else "-";
    p_Result_60_fu_4281_p3 <= x_new_V_29_fu_4274_p3(47 downto 47);
    p_Result_62_fu_5132_p2 <= (tmp_V_54_fu_5048_p3 and lshr_ln897_11_fu_5126_p2);
    p_Result_64_fu_572_p3 <= ireg_V_fu_564_p1(63 downto 63);
    p_Result_65_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_598_p3),54));
    p_Result_66_fu_1087_p3 <= (ap_const_lv16_FFFF & p_Result_s_fu_1077_p4);
    p_Result_67_fu_1325_p5 <= (tmp_13_fu_1318_p3 & m_112_fu_1287_p1(51 downto 0));
    p_Result_69_fu_1446_p3 <= (ap_const_lv16_FFFF & p_Result_2_fu_1436_p4);
    p_Result_70_fu_1684_p5 <= (tmp_15_fu_1677_p3 & m_113_fu_1646_p1(51 downto 0));
    p_Result_71_fu_1864_p3 <= (ap_const_lv16_FFFF & p_Result_19_fu_1854_p4);
    p_Result_72_fu_2102_p5 <= (tmp_17_fu_2095_p3 & m_114_fu_2064_p1(51 downto 0));
    p_Result_74_fu_2223_p3 <= (ap_const_lv16_FFFF & p_Result_30_fu_2213_p4);
    p_Result_75_fu_2461_p5 <= (tmp_19_fu_2454_p3 & m_115_fu_2423_p1(51 downto 0));
    p_Result_76_fu_4700_p3 <= tmp_V_42_fu_4695_p2(47 downto 47);
    p_Result_77_fu_4731_p3 <= (ap_const_lv16_FFFF & p_Result_1_fu_4721_p4);
    p_Result_78_fu_5302_p5 <= (tmp_21_fu_5295_p3 & m_116_fu_5264_p1(51 downto 0));
    p_Result_79_fu_2722_p3 <= (ap_const_lv16_FFFF & p_Result_8_fu_2712_p4);
    p_Result_7_fu_1155_p2 <= (tmp_V_36_fu_1071_p3 and lshr_ln897_fu_1149_p2);
    p_Result_80_fu_2960_p5 <= (tmp_23_fu_2953_p3 & m_117_fu_2922_p1(51 downto 0));
    p_Result_82_fu_3081_p3 <= (ap_const_lv16_FFFF & p_Result_14_fu_3071_p4);
    p_Result_83_fu_3319_p5 <= (tmp_25_fu_3312_p3 & m_118_fu_3281_p1(51 downto 0));
    p_Result_84_fu_3499_p3 <= (ap_const_lv16_FFFF & p_Result_20_fu_3489_p4);
    p_Result_85_fu_3737_p5 <= (tmp_27_fu_3730_p3 & m_119_fu_3699_p1(51 downto 0));
    p_Result_87_fu_3858_p3 <= (ap_const_lv16_FFFF & p_Result_26_fu_3848_p4);
    p_Result_88_fu_4096_p5 <= (tmp_29_fu_4089_p3 & m_120_fu_4058_p1(51 downto 0));
    p_Result_89_fu_4874_p3 <= tmp_V_50_fu_4869_p2(47 downto 47);
    
    p_Result_8_fu_2712_p4_proc : process(tmp_V_44_fu_2706_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable p_Result_8_fu_2712_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_2F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_44_fu_2706_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_2F(6-1 downto 0)));
            for p_Result_8_fu_2712_p4_i in 0 to 48-1 loop
                v0_cpy(p_Result_8_fu_2712_p4_i) := tmp_V_44_fu_2706_p3(48-1-p_Result_8_fu_2712_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(48-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_8_fu_2712_p4 <= resvalue(48-1 downto 0);
    end process;

    p_Result_90_fu_4905_p3 <= (ap_const_lv16_FFFF & p_Result_34_fu_4895_p4);
    p_Result_91_fu_5441_p5 <= (tmp_31_fu_5434_p3 & m_121_fu_5403_p1(51 downto 0));
    p_Result_92_fu_4357_p3 <= (ap_const_lv16_FFFF & p_Result_41_fu_4347_p4);
    p_Result_93_fu_4595_p5 <= (tmp_33_fu_4588_p3 & m_122_fu_4557_p1(51 downto 0));
    p_Result_95_fu_5064_p3 <= (ap_const_lv16_FFFF & p_Result_48_fu_5054_p4);
    p_Result_96_fu_5580_p5 <= (tmp_35_fu_5573_p3 & m_123_fu_5542_p1(51 downto 0));
    
    p_Result_97_fu_5774_p4_proc : process(tmp_data_V_fu_214, bvh_d_index_fu_206, p_Repl2_11_fu_5770_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        p_Result_97_fu_5774_p4 <= tmp_data_V_fu_214;
        if to_integer(unsigned(bvh_d_index_fu_206)) >= tmp_data_V_fu_214'low and to_integer(unsigned(bvh_d_index_fu_206)) <= tmp_data_V_fu_214'high then
            result(0) := '0';
            for i in p_Repl2_11_fu_5770_p1'range loop
                result(0) := result(0) or p_Repl2_11_fu_5770_p1(i);
            end loop;
            p_Result_97_fu_5774_p4(to_integer(unsigned(bvh_d_index_fu_206))) <= result(0);
        end if;
    end process;

    p_Result_9_fu_1546_p3 <= tmp_V_38_fu_1430_p3(to_integer(unsigned(lsb_index_1_fu_1472_p2)) downto to_integer(unsigned(lsb_index_1_fu_1472_p2))) when (to_integer(unsigned(lsb_index_1_fu_1472_p2))>= 0 and to_integer(unsigned(lsb_index_1_fu_1472_p2))<=47) else "-";
    
    p_Result_s_fu_1077_p4_proc : process(tmp_V_36_fu_1071_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(48+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable p_Result_s_fu_1077_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(48 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_2F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_36_fu_1071_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(48-1-unsigned(ap_const_lv32_2F(6-1 downto 0)));
            for p_Result_s_fu_1077_p4_i in 0 to 48-1 loop
                v0_cpy(p_Result_s_fu_1077_p4_i) := tmp_V_36_fu_1071_p3(48-1-p_Result_s_fu_1077_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(48-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_1077_p4 <= resvalue(48-1 downto 0);
    end process;

    p_op_fu_898_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(n_bits_read_reg_5850));
    ret_V_10_fu_2568_p2 <= std_logic_vector(unsigned(ap_const_lv49_80000000000) - unsigned(lhs_V_fu_2534_p1));
    ret_V_11_fu_2654_p4 <= x_new_V_25_fu_2639_p3(47 downto 43);
    ret_V_12_fu_2674_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(ret_V_11_fu_2654_p4));
    ret_V_13_fu_3401_p2 <= std_logic_vector(unsigned(ap_const_lv49_80000000000) - unsigned(rhs_V_6_fu_3397_p1));
    ret_V_14_fu_3431_p4 <= x_new_V_27_fu_3416_p3(47 downto 43);
    ret_V_15_fu_3451_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(ret_V_14_fu_3431_p4));
    ret_V_16_fu_4173_p2 <= std_logic_vector(unsigned(ap_const_lv49_80000000000) + unsigned(lhs_V_3_fu_4169_p1));
    ret_V_17_fu_4183_p2 <= std_logic_vector(unsigned(ap_const_lv49_80000000000) + unsigned(rhs_V_6_reg_6336));
    ret_V_1_fu_1019_p4 <= x_new_V_21_fu_1004_p3(47 downto 43);
    ret_V_20_fu_4203_p2 <= std_logic_vector(unsigned(ap_const_lv49_80000000000) - unsigned(lhs_V_3_fu_4169_p1));
    ret_V_21_fu_4289_p4 <= x_new_V_29_fu_4274_p3(47 downto 43);
    ret_V_22_fu_4309_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(ret_V_21_fu_4289_p4));
    ret_V_2_fu_1039_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(ret_V_1_fu_1019_p4));
    ret_V_3_fu_1766_p2 <= std_logic_vector(unsigned(ap_const_lv49_80000000000) - unsigned(rhs_V_5_fu_1762_p1));
    ret_V_4_fu_1796_p4 <= x_new_V_23_fu_1781_p3(47 downto 43);
    ret_V_5_fu_1816_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(ret_V_4_fu_1796_p4));
    ret_V_6_fu_2538_p2 <= std_logic_vector(unsigned(ap_const_lv49_80000000000) + unsigned(lhs_V_fu_2534_p1));
    ret_V_7_fu_2548_p2 <= std_logic_vector(unsigned(ap_const_lv49_80000000000) + unsigned(rhs_V_5_reg_6051));
    ret_V_fu_941_p2 <= std_logic_vector(unsigned(ap_const_lv49_80000000000) - unsigned(rhs_V_fu_937_p1));
        rhs_V_5_fu_1762_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_log_iter0_V_fu_1750_p3),49));

        rhs_V_6_fu_3397_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_log_iter2_V_fu_3385_p3),49));

        rhs_V_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_254),49));

    select_ln603_1_fu_808_p3 <= 
        x_log_V_1_fu_698_p1 when (and_ln585_fu_758_p2(0) = '1') else 
        x_log_V_fu_672_p1;
    select_ln603_2_fu_822_p3 <= 
        select_ln603_fu_794_p3 when (or_ln603_fu_802_p2(0) = '1') else 
        select_ln603_1_fu_808_p3;
    select_ln603_3_fu_887_p3 <= 
        select_ln603_2_reg_5858 when (or_ln603_2_reg_5863(0) = '1') else 
        ap_const_lv48_0;
    select_ln603_fu_794_p3 <= 
        shl_ln604_fu_722_p2 when (and_ln603_fu_788_p2(0) = '1') else 
        x_log_V_2_fu_710_p3;
    select_ln850_1_fu_4243_p3 <= 
        select_ln851_5_fu_4235_p3 when (p_Result_55_fu_4227_p3(0) = '1') else 
        grp_fu_522_p4;
    select_ln850_fu_2608_p3 <= 
        select_ln851_2_fu_2600_p3 when (p_Result_37_fu_2592_p3(0) = '1') else 
        grp_fu_522_p4;
    select_ln851_1_fu_1822_p3 <= 
        ret_V_4_fu_1796_p4 when (icmp_ln851_1_fu_1810_p2(0) = '1') else 
        ret_V_5_fu_1816_p2;
    select_ln851_2_fu_2600_p3 <= 
        grp_fu_522_p4 when (grp_fu_542_p2(0) = '1') else 
        grp_fu_548_p2;
    select_ln851_3_fu_2680_p3 <= 
        ret_V_11_fu_2654_p4 when (icmp_ln851_3_fu_2668_p2(0) = '1') else 
        ret_V_12_fu_2674_p2;
    select_ln851_4_fu_3457_p3 <= 
        ret_V_14_fu_3431_p4 when (icmp_ln851_4_fu_3445_p2(0) = '1') else 
        ret_V_15_fu_3451_p2;
    select_ln851_5_fu_4235_p3 <= 
        grp_fu_522_p4 when (grp_fu_542_p2(0) = '1') else 
        grp_fu_548_p2;
    select_ln851_6_fu_4315_p3 <= 
        ret_V_21_fu_4289_p4 when (icmp_ln851_6_fu_4303_p2(0) = '1') else 
        ret_V_22_fu_4309_p2;
    select_ln851_fu_1045_p3 <= 
        ret_V_1_fu_1019_p4 when (icmp_ln851_fu_1033_p2(0) = '1') else 
        ret_V_2_fu_1039_p2;
    select_ln886_1_fu_1830_p3 <= 
        select_ln851_1_fu_1822_p3 when (p_Result_27_fu_1788_p3(0) = '1') else 
        ret_V_4_fu_1796_p4;
    select_ln886_2_fu_2688_p3 <= 
        select_ln851_3_fu_2680_p3 when (p_Result_45_fu_2646_p3(0) = '1') else 
        ret_V_11_fu_2654_p4;
    select_ln886_3_fu_3465_p3 <= 
        select_ln851_4_fu_3457_p3 when (p_Result_51_fu_3423_p3(0) = '1') else 
        ret_V_14_fu_3431_p4;
    select_ln886_4_fu_4323_p3 <= 
        select_ln851_6_fu_4315_p3 when (p_Result_60_fu_4281_p3(0) = '1') else 
        ret_V_21_fu_4289_p4;
    select_ln886_fu_1053_p3 <= 
        select_ln851_fu_1045_p3 when (p_Result_10_fu_1011_p3(0) = '1') else 
        ret_V_1_fu_1019_p4;
    select_ln915_10_fu_4569_p3 <= 
        ap_const_lv11_3FF when (tmp_90_fu_4561_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln915_11_fu_5554_p3 <= 
        ap_const_lv11_3FF when (tmp_94_fu_5546_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln915_1_fu_1658_p3 <= 
        ap_const_lv11_3FF when (tmp_48_fu_1650_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln915_2_fu_2076_p3 <= 
        ap_const_lv11_3FF when (tmp_53_fu_2068_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln915_3_fu_2435_p3 <= 
        ap_const_lv11_3FF when (tmp_57_fu_2427_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln915_4_fu_5276_p3 <= 
        ap_const_lv11_3FF when (tmp_62_fu_5268_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln915_5_fu_2934_p3 <= 
        ap_const_lv11_3FF when (tmp_67_fu_2926_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln915_6_fu_3293_p3 <= 
        ap_const_lv11_3FF when (tmp_71_fu_3285_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln915_7_fu_3711_p3 <= 
        ap_const_lv11_3FF when (tmp_76_fu_3703_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln915_8_fu_4070_p3 <= 
        ap_const_lv11_3FF when (tmp_80_fu_4062_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln915_9_fu_5415_p3 <= 
        ap_const_lv11_3FF when (tmp_85_fu_5407_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln915_fu_1299_p3 <= 
        ap_const_lv11_3FF when (tmp_44_fu_1291_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln924_2_fu_2180_p3 <= 
        x_new_V_7_fu_2163_p2 when (and_ln924_5_fu_2174_p2(0) = '1') else 
        x_new_V_23_reg_6066;
    select_ln924_4_fu_3038_p3 <= 
        x_new_V_11_fu_3021_p2 when (and_ln924_11_fu_3032_p2(0) = '1') else 
        x_new_V_25_reg_6212;
    select_ln924_6_fu_3815_p3 <= 
        x_new_V_15_fu_3798_p2 when (and_ln924_15_fu_3809_p2(0) = '1') else 
        x_new_V_27_reg_6351;
    select_ln924_8_fu_4673_p3 <= 
        x_new_V_19_fu_4656_p2 when (and_ln924_21_fu_4667_p2(0) = '1') else 
        x_new_V_29_reg_6497;
    select_ln924_fu_1403_p3 <= 
        x_new_V_3_fu_1386_p2 when (and_ln924_1_fu_1397_p2(0) = '1') else 
        x_new_V_21_reg_5927;
        sext_ln1116_1_fu_1772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_275),141));

        sext_ln1116_2_fu_2544_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_6_fu_2538_p2),50));

        sext_ln1116_3_fu_2553_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_7_fu_2548_p2),50));

        sext_ln1116_4_fu_2630_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_4_reg_333),141));

        sext_ln1116_5_fu_3407_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_6_reg_411),141));

        sext_ln1116_6_fu_4179_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_16_fu_4173_p2),50));

        sext_ln1116_7_fu_4188_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_17_fu_4183_p2),50));

        sext_ln1116_8_fu_4265_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_8_reg_408),141));

        sext_ln1116_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_275),141));

        sext_ln1118_1_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_reg_5897),141));

        sext_ln1118_2_fu_1757_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_log_iter0_V_fu_1750_p3),93));

        sext_ln1118_3_fu_1777_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_3_reg_6056),141));

        sext_ln1118_4_fu_2563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_log_iter1_V_fu_2527_p3),93));

        sext_ln1118_5_fu_2635_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_10_reg_6196),141));

        sext_ln1118_6_fu_3392_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_log_iter2_V_fu_3385_p3),93));

        sext_ln1118_7_fu_3412_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_13_reg_6341),141));

        sext_ln1118_8_fu_4198_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_log_iter3_V_fu_4162_p3),93));

        sext_ln1118_9_fu_4270_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_20_reg_6481),141));

        sext_ln1118_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_254),93));

        sext_ln1192_1_fu_4209_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_4_reg_6475),95));

        sext_ln1192_2_fu_2578_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_reg_6190),94));

        sext_ln1192_3_fu_4213_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_4_reg_6475),94));

        sext_ln1192_fu_2574_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_reg_6190),95));

        sext_ln581_fu_662_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_654_p3),32));

    sh_amt_fu_654_p3 <= 
        add_ln581_fu_642_p2 when (icmp_ln581_fu_636_p2(0) = '1') else 
        sub_ln581_fu_648_p2;
    shl_ln604_fu_722_p2 <= std_logic_vector(shift_left(unsigned(x_log_V_fu_672_p1),to_integer(unsigned('0' & zext_ln604_fu_718_p1(31-1 downto 0)))));
    shl_ln703_1_fu_2151_p3 <= (select_ln886_1_reg_6081 & ap_const_lv43_0);
    shl_ln703_2_fu_2616_p3 <= (select_ln850_fu_2608_p3 & ap_const_lv43_0);
    shl_ln703_3_fu_3009_p3 <= (select_ln886_2_reg_6227 & ap_const_lv43_0);
    shl_ln703_4_fu_3786_p3 <= (select_ln886_3_reg_6366 & ap_const_lv43_0);
    shl_ln703_5_fu_4251_p3 <= (select_ln850_1_fu_4243_p3 & ap_const_lv43_0);
    shl_ln703_6_fu_4644_p3 <= (select_ln886_4_reg_6512 & ap_const_lv43_0);
    shl_ln83_fu_916_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & n_bits_read_reg_5850(31-1 downto 0)))));
    shl_ln908_10_fu_4525_p2 <= std_logic_vector(shift_left(unsigned(m_102_fu_4495_p1),to_integer(unsigned('0' & zext_ln908_21_fu_4521_p1(31-1 downto 0)))));
    shl_ln908_11_fu_5510_p2 <= std_logic_vector(shift_left(unsigned(m_107_fu_5480_p1),to_integer(unsigned('0' & zext_ln908_23_fu_5506_p1(31-1 downto 0)))));
    shl_ln908_1_fu_1614_p2 <= std_logic_vector(shift_left(unsigned(m_14_fu_1584_p1),to_integer(unsigned('0' & zext_ln908_3_fu_1610_p1(31-1 downto 0)))));
    shl_ln908_2_fu_2032_p2 <= std_logic_vector(shift_left(unsigned(m_39_fu_2002_p1),to_integer(unsigned('0' & zext_ln908_5_fu_2028_p1(31-1 downto 0)))));
    shl_ln908_3_fu_2391_p2 <= std_logic_vector(shift_left(unsigned(m_59_fu_2361_p1),to_integer(unsigned('0' & zext_ln908_7_fu_2387_p1(31-1 downto 0)))));
    shl_ln908_4_fu_5232_p2 <= std_logic_vector(shift_left(unsigned(m_72_fu_5202_p1),to_integer(unsigned('0' & zext_ln908_9_fu_5228_p1(31-1 downto 0)))));
    shl_ln908_5_fu_2890_p2 <= std_logic_vector(shift_left(unsigned(m_77_fu_2860_p1),to_integer(unsigned('0' & zext_ln908_11_fu_2886_p1(31-1 downto 0)))));
    shl_ln908_6_fu_3249_p2 <= std_logic_vector(shift_left(unsigned(m_82_fu_3219_p1),to_integer(unsigned('0' & zext_ln908_13_fu_3245_p1(31-1 downto 0)))));
    shl_ln908_7_fu_3667_p2 <= std_logic_vector(shift_left(unsigned(m_87_fu_3637_p1),to_integer(unsigned('0' & zext_ln908_15_fu_3663_p1(31-1 downto 0)))));
    shl_ln908_8_fu_4026_p2 <= std_logic_vector(shift_left(unsigned(m_92_fu_3996_p1),to_integer(unsigned('0' & zext_ln908_17_fu_4022_p1(31-1 downto 0)))));
    shl_ln908_9_fu_5371_p2 <= std_logic_vector(shift_left(unsigned(m_97_fu_5341_p1),to_integer(unsigned('0' & zext_ln908_19_fu_5367_p1(31-1 downto 0)))));
    shl_ln908_fu_1255_p2 <= std_logic_vector(shift_left(unsigned(m_fu_1225_p1),to_integer(unsigned('0' & zext_ln908_1_fu_1251_p1(31-1 downto 0)))));
    shl_ln_fu_1374_p3 <= (select_ln886_reg_5942 & ap_const_lv43_0);
    smax1266_neg_fu_903_p3 <= 
        p_op_fu_898_p2 when (tmp_39_reg_5868(0) = '1') else 
        ap_const_lv32_1;
    smax_fu_958_p3 <= 
        total_bits_0_reg_263 when (empty_fu_953_p2(0) = '1') else 
        num_bits_read_reg_5841;
    sub_ln53_fu_893_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) - signed(n_bits_read_reg_5850));
    sub_ln581_fu_648_p2 <= std_logic_vector(unsigned(ap_const_lv12_2B) - unsigned(F2_fu_630_p2));
    sub_ln703_3_fu_4259_p2 <= std_logic_vector(unsigned(tmp2_V_fu_4217_p4) - unsigned(shl_ln703_5_fu_4251_p3));
    sub_ln703_fu_2624_p2 <= std_logic_vector(unsigned(tmp1_V_fu_2582_p4) - unsigned(shl_ln703_2_fu_2616_p3));
    sub_ln86_fu_965_p2 <= std_logic_vector(unsigned(add_ln86_fu_947_p2) - unsigned(smax_fu_958_p3));
    sub_ln894_10_fu_4377_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(l_10_fu_4373_p1));
    sub_ln894_11_fu_5084_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(l_11_fu_5080_p1));
    sub_ln894_1_fu_1466_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(l_1_fu_1462_p1));
    sub_ln894_2_fu_1884_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(l_2_fu_1880_p1));
    sub_ln894_3_fu_2243_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(l_3_fu_2239_p1));
    sub_ln894_4_fu_4751_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(l_4_fu_4747_p1));
    sub_ln894_5_fu_2742_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(l_5_fu_2738_p1));
    sub_ln894_6_fu_3101_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(l_6_fu_3097_p1));
    sub_ln894_7_fu_3519_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(l_7_fu_3515_p1));
    sub_ln894_8_fu_3878_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(l_8_fu_3874_p1));
    sub_ln894_9_fu_4925_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(l_9_fu_4921_p1));
    sub_ln894_fu_1107_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(l_fu_1103_p1));
    sub_ln897_10_fu_4409_p2 <= std_logic_vector(signed(ap_const_lv6_26) - signed(trunc_ln897_10_fu_4405_p1));
    sub_ln897_11_fu_5116_p2 <= std_logic_vector(signed(ap_const_lv6_26) - signed(trunc_ln897_11_fu_5112_p1));
    sub_ln897_1_fu_1498_p2 <= std_logic_vector(signed(ap_const_lv6_26) - signed(trunc_ln897_1_fu_1494_p1));
    sub_ln897_2_fu_1916_p2 <= std_logic_vector(signed(ap_const_lv6_26) - signed(trunc_ln897_2_fu_1912_p1));
    sub_ln897_3_fu_2275_p2 <= std_logic_vector(signed(ap_const_lv6_26) - signed(trunc_ln897_3_fu_2271_p1));
    sub_ln897_4_fu_4783_p2 <= std_logic_vector(signed(ap_const_lv6_26) - signed(trunc_ln897_4_fu_4779_p1));
    sub_ln897_5_fu_2774_p2 <= std_logic_vector(signed(ap_const_lv6_26) - signed(trunc_ln897_5_fu_2770_p1));
    sub_ln897_6_fu_3133_p2 <= std_logic_vector(signed(ap_const_lv6_26) - signed(trunc_ln897_6_fu_3129_p1));
    sub_ln897_7_fu_3551_p2 <= std_logic_vector(signed(ap_const_lv6_26) - signed(trunc_ln897_7_fu_3547_p1));
    sub_ln897_8_fu_3910_p2 <= std_logic_vector(signed(ap_const_lv6_26) - signed(trunc_ln897_8_fu_3906_p1));
    sub_ln897_9_fu_4957_p2 <= std_logic_vector(signed(ap_const_lv6_26) - signed(trunc_ln897_9_fu_4953_p1));
    sub_ln897_fu_1139_p2 <= std_logic_vector(signed(ap_const_lv6_26) - signed(trunc_ln897_fu_1135_p1));
    sub_ln908_10_fu_4516_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_10_reg_6529));
    sub_ln908_11_fu_5501_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_11_reg_6661));
    sub_ln908_1_fu_1605_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_1_reg_6015));
    sub_ln908_2_fu_2023_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_2_reg_6098));
    sub_ln908_3_fu_2382_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_3_reg_6154));
    sub_ln908_4_fu_5223_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_4_reg_6596));
    sub_ln908_5_fu_2881_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_5_reg_6244));
    sub_ln908_6_fu_3240_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_6_reg_6300));
    sub_ln908_7_fu_3658_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_7_reg_6383));
    sub_ln908_8_fu_4017_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_8_reg_6439));
    sub_ln908_9_fu_5362_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_9_reg_6634));
    sub_ln908_fu_1246_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_reg_5959));
    sub_ln915_10_fu_4577_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) - unsigned(trunc_ln893_10_reg_6545));
    sub_ln915_11_fu_5562_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) - unsigned(trunc_ln893_11_reg_6677));
    sub_ln915_1_fu_1666_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) - unsigned(trunc_ln893_1_reg_6031));
    sub_ln915_2_fu_2084_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) - unsigned(trunc_ln893_2_reg_6114));
    sub_ln915_3_fu_2443_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) - unsigned(trunc_ln893_3_reg_6170));
    sub_ln915_4_fu_5284_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) - unsigned(trunc_ln893_4_reg_6612));
    sub_ln915_5_fu_2942_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) - unsigned(trunc_ln893_5_reg_6260));
    sub_ln915_6_fu_3301_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) - unsigned(trunc_ln893_6_reg_6316));
    sub_ln915_7_fu_3719_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) - unsigned(trunc_ln893_7_reg_6399));
    sub_ln915_8_fu_4078_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) - unsigned(trunc_ln893_8_reg_6455));
    sub_ln915_9_fu_5423_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) - unsigned(trunc_ln893_9_reg_6650));
    sub_ln915_fu_1307_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) - unsigned(trunc_ln893_reg_5975));
    tmp1_V_fu_2582_p4 <= grp_fu_296_p2(90 downto 43);
    tmp2_V_fu_4217_p4 <= grp_fu_296_p2(90 downto 43);
    
    tmp_10_fu_5072_p3_proc : process(p_Result_95_fu_5064_p3)
    begin
        tmp_10_fu_5072_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_95_fu_5064_p3(i) = '1' then
                tmp_10_fu_5072_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_11_fu_598_p3 <= (ap_const_lv1_1 & trunc_ln565_fu_594_p1);
    tmp_13_fu_1318_p3 <= (p_Result_10_reg_5936 & add_ln915_fu_1312_p2);
    tmp_15_fu_1677_p3 <= (p_Result_68_reg_6003 & add_ln915_1_fu_1671_p2);
    tmp_17_fu_2095_p3 <= (p_Result_27_reg_6075 & add_ln915_2_fu_2089_p2);
    tmp_19_fu_2454_p3 <= (p_Result_73_reg_6142 & add_ln915_3_fu_2448_p2);
    
    tmp_1_fu_4365_p3_proc : process(p_Result_92_fu_4357_p3)
    begin
        tmp_1_fu_4365_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_92_fu_4357_p3(i) = '1' then
                tmp_1_fu_4365_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_21_fu_5295_p3 <= (p_Result_76_reg_6585 & add_ln915_4_fu_5289_p2);
    tmp_23_fu_2953_p3 <= (p_Result_45_reg_6221 & add_ln915_5_fu_2947_p2);
    tmp_25_fu_3312_p3 <= (p_Result_81_reg_6288 & add_ln915_6_fu_3306_p2);
    tmp_27_fu_3730_p3 <= (p_Result_51_reg_6360 & add_ln915_7_fu_3724_p2);
    tmp_29_fu_4089_p3 <= (p_Result_86_reg_6427 & add_ln915_8_fu_4083_p2);
    
    tmp_2_fu_1454_p3_proc : process(p_Result_69_fu_1446_p3)
    begin
        tmp_2_fu_1454_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_69_fu_1446_p3(i) = '1' then
                tmp_2_fu_1454_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_31_fu_5434_p3 <= (p_Result_89_reg_6623 & add_ln915_9_fu_5428_p2);
    tmp_33_fu_4588_p3 <= (p_Result_60_reg_6506 & add_ln915_10_fu_4582_p2);
    tmp_35_fu_5573_p3 <= (p_Result_94_reg_6573 & add_ln915_11_fu_5567_p2);
    tmp_38_fu_702_p3 <= ireg_V_fu_564_p1(63 downto 63);
    
    tmp_3_fu_1872_p3_proc : process(p_Result_71_fu_1864_p3)
    begin
        tmp_3_fu_1872_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_71_fu_1864_p3(i) = '1' then
                tmp_3_fu_1872_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_42_fu_1119_p4 <= lsb_index_fu_1113_p2(31 downto 1);
    tmp_43_fu_1173_p3 <= lsb_index_fu_1113_p2(31 downto 31);
    tmp_44_fu_1291_p3 <= m_2_fu_1271_p2(54 downto 54);
    tmp_46_fu_1478_p4 <= lsb_index_1_fu_1472_p2(31 downto 1);
    tmp_47_fu_1532_p3 <= lsb_index_1_fu_1472_p2(31 downto 31);
    tmp_48_fu_1650_p3 <= m_24_fu_1630_p2(54 downto 54);
    
    tmp_4_fu_2231_p3_proc : process(p_Result_74_fu_2223_p3)
    begin
        tmp_4_fu_2231_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_74_fu_2223_p3(i) = '1' then
                tmp_4_fu_2231_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_51_fu_1896_p4 <= lsb_index_2_fu_1890_p2(31 downto 1);
    tmp_52_fu_1950_p3 <= lsb_index_2_fu_1890_p2(31 downto 31);
    tmp_53_fu_2068_p3 <= m_49_fu_2048_p2(54 downto 54);
    tmp_55_fu_2255_p4 <= lsb_index_3_fu_2249_p2(31 downto 1);
    tmp_56_fu_2309_p3 <= lsb_index_3_fu_2249_p2(31 downto 31);
    tmp_57_fu_2427_p3 <= m_61_fu_2407_p2(54 downto 54);
    
    tmp_5_fu_4739_p3_proc : process(p_Result_77_fu_4731_p3)
    begin
        tmp_5_fu_4739_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_77_fu_4731_p3(i) = '1' then
                tmp_5_fu_4739_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_60_fu_4763_p4 <= lsb_index_4_fu_4757_p2(31 downto 1);
    tmp_61_fu_4817_p3 <= lsb_index_4_fu_4757_p2(31 downto 31);
    tmp_62_fu_5268_p3 <= m_74_fu_5248_p2(54 downto 54);
    tmp_65_fu_2754_p4 <= lsb_index_5_fu_2748_p2(31 downto 1);
    tmp_66_fu_2808_p3 <= lsb_index_5_fu_2748_p2(31 downto 31);
    tmp_67_fu_2926_p3 <= m_79_fu_2906_p2(54 downto 54);
    tmp_69_fu_3113_p4 <= lsb_index_6_fu_3107_p2(31 downto 1);
    
    tmp_6_fu_2730_p3_proc : process(p_Result_79_fu_2722_p3)
    begin
        tmp_6_fu_2730_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_79_fu_2722_p3(i) = '1' then
                tmp_6_fu_2730_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_70_fu_3167_p3 <= lsb_index_6_fu_3107_p2(31 downto 31);
    tmp_71_fu_3285_p3 <= m_84_fu_3265_p2(54 downto 54);
    tmp_74_fu_3531_p4 <= lsb_index_7_fu_3525_p2(31 downto 1);
    tmp_75_fu_3585_p3 <= lsb_index_7_fu_3525_p2(31 downto 31);
    tmp_76_fu_3703_p3 <= m_89_fu_3683_p2(54 downto 54);
    tmp_78_fu_3890_p4 <= lsb_index_8_fu_3884_p2(31 downto 1);
    tmp_79_fu_3944_p3 <= lsb_index_8_fu_3884_p2(31 downto 31);
    
    tmp_7_fu_3089_p3_proc : process(p_Result_82_fu_3081_p3)
    begin
        tmp_7_fu_3089_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_82_fu_3081_p3(i) = '1' then
                tmp_7_fu_3089_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_80_fu_4062_p3 <= m_94_fu_4042_p2(54 downto 54);
    tmp_83_fu_4937_p4 <= lsb_index_9_fu_4931_p2(31 downto 1);
    tmp_84_fu_4991_p3 <= lsb_index_9_fu_4931_p2(31 downto 31);
    tmp_85_fu_5407_p3 <= m_99_fu_5387_p2(54 downto 54);
    tmp_88_fu_4389_p4 <= lsb_index_10_fu_4383_p2(31 downto 1);
    tmp_89_fu_4443_p3 <= lsb_index_10_fu_4383_p2(31 downto 31);
    
    tmp_8_fu_3507_p3_proc : process(p_Result_84_fu_3499_p3)
    begin
        tmp_8_fu_3507_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_84_fu_3499_p3(i) = '1' then
                tmp_8_fu_3507_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_90_fu_4561_p3 <= m_104_fu_4541_p2(54 downto 54);
    tmp_92_fu_5096_p4 <= lsb_index_11_fu_5090_p2(31 downto 1);
    tmp_93_fu_5150_p3 <= lsb_index_11_fu_5090_p2(31 downto 31);
    tmp_94_fu_5546_p3 <= m_109_fu_5526_p2(54 downto 54);
    tmp_96_fu_5797_p3 <= bit_pos_fu_5785_p2(31 downto 31);
    
    tmp_9_fu_3866_p3_proc : process(p_Result_87_fu_3858_p3)
    begin
        tmp_9_fu_3866_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_87_fu_3858_p3(i) = '1' then
                tmp_9_fu_3866_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_V_10_fu_2202_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(tmp_V_40_reg_6134));
    tmp_V_13_fu_4708_p2 <= std_logic_vector(signed(ap_const_lv48_F80000000000) - signed(sub_ln703_reg_6201));
    tmp_V_16_fu_2701_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(x_new_V_25_reg_6212));
    tmp_V_19_fu_3060_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(tmp_V_45_reg_6280));
    tmp_V_22_fu_3478_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(x_new_V_27_reg_6351));
    tmp_V_25_fu_3837_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(tmp_V_48_reg_6419));
    tmp_V_28_fu_4882_p2 <= std_logic_vector(signed(ap_const_lv48_F80000000000) - signed(sub_ln703_3_reg_6486));
    tmp_V_31_fu_4336_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(x_new_V_29_reg_6497));
    tmp_V_34_fu_5043_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(tmp_V_53_reg_6565));
    tmp_V_36_fu_1071_p3 <= 
        tmp_V_fu_1066_p2 when (p_Result_10_reg_5936(0) = '1') else 
        x_new_V_21_reg_5927;
    tmp_V_37_fu_1410_p3 <= 
        ap_const_lv48_0 when (icmp_ln885_reg_5947(0) = '1') else 
        select_ln924_fu_1403_p3;
    tmp_V_38_fu_1430_p3 <= 
        tmp_V_4_fu_1425_p2 when (p_Result_68_reg_6003(0) = '1') else 
        tmp_V_37_reg_5995;
    tmp_V_39_fu_1848_p3 <= 
        tmp_V_7_fu_1843_p2 when (p_Result_27_reg_6075(0) = '1') else 
        x_new_V_23_reg_6066;
    tmp_V_40_fu_2187_p3 <= 
        ap_const_lv48_0 when (icmp_ln885_2_reg_6086(0) = '1') else 
        select_ln924_2_fu_2180_p3;
    tmp_V_41_fu_2207_p3 <= 
        tmp_V_10_fu_2202_p2 when (p_Result_73_reg_6142(0) = '1') else 
        tmp_V_40_reg_6134;
    tmp_V_42_fu_4695_p2 <= std_logic_vector(unsigned(ap_const_lv48_80000000000) + unsigned(sub_ln703_reg_6201));
    tmp_V_43_fu_4713_p3 <= 
        tmp_V_13_fu_4708_p2 when (p_Result_76_fu_4700_p3(0) = '1') else 
        tmp_V_42_fu_4695_p2;
    tmp_V_44_fu_2706_p3 <= 
        tmp_V_16_fu_2701_p2 when (p_Result_45_reg_6221(0) = '1') else 
        x_new_V_25_reg_6212;
    tmp_V_45_fu_3045_p3 <= 
        ap_const_lv48_0 when (icmp_ln885_5_reg_6232(0) = '1') else 
        select_ln924_4_fu_3038_p3;
    tmp_V_46_fu_3065_p3 <= 
        tmp_V_19_fu_3060_p2 when (p_Result_81_reg_6288(0) = '1') else 
        tmp_V_45_reg_6280;
    tmp_V_47_fu_3483_p3 <= 
        tmp_V_22_fu_3478_p2 when (p_Result_51_reg_6360(0) = '1') else 
        x_new_V_27_reg_6351;
    tmp_V_48_fu_3822_p3 <= 
        ap_const_lv48_0 when (icmp_ln885_7_reg_6371(0) = '1') else 
        select_ln924_6_fu_3815_p3;
    tmp_V_49_fu_3842_p3 <= 
        tmp_V_25_fu_3837_p2 when (p_Result_86_reg_6427(0) = '1') else 
        tmp_V_48_reg_6419;
    tmp_V_4_fu_1425_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(tmp_V_37_reg_5995));
    tmp_V_50_fu_4869_p2 <= std_logic_vector(unsigned(ap_const_lv48_80000000000) + unsigned(sub_ln703_3_reg_6486));
    tmp_V_51_fu_4887_p3 <= 
        tmp_V_28_fu_4882_p2 when (p_Result_89_fu_4874_p3(0) = '1') else 
        tmp_V_50_fu_4869_p2;
    tmp_V_52_fu_4341_p3 <= 
        tmp_V_31_fu_4336_p2 when (p_Result_60_reg_6506(0) = '1') else 
        x_new_V_29_reg_6497;
    tmp_V_53_fu_4680_p3 <= 
        ap_const_lv48_0 when (icmp_ln885_10_reg_6517(0) = '1') else 
        select_ln924_8_fu_4673_p3;
    tmp_V_54_fu_5048_p3 <= 
        tmp_V_34_fu_5043_p2 when (p_Result_94_reg_6573(0) = '1') else 
        tmp_V_53_reg_6565;
    tmp_V_7_fu_1843_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(x_new_V_23_reg_6066));
    tmp_V_fu_1066_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(x_new_V_21_reg_5927));
    
    tmp_fu_1095_p3_proc : process(p_Result_66_fu_1087_p3)
    begin
        tmp_fu_1095_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_66_fu_1087_p3(i) = '1' then
                tmp_fu_1095_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_s_fu_4913_p3_proc : process(p_Result_90_fu_4905_p3)
    begin
        tmp_s_fu_4913_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_90_fu_4905_p3(i) = '1' then
                tmp_s_fu_4913_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    total_bits_fu_983_p2 <= std_logic_vector(unsigned(add_ln86_fu_947_p2) - unsigned(umax_fu_976_p3));
    total_bytes_to_send_fu_875_p3 <= 
        add_ln39_1_fu_869_p2 when (icmp_ln39_fu_849_p2(0) = '1') else 
        ap_const_lv29_0;
    trunc_ln556_fu_568_p1 <= ireg_V_fu_564_p1(63 - 1 downto 0);
    trunc_ln565_2_fu_5711_p1 <= tmp_V_50_reg_6617(32 - 1 downto 0);
    trunc_ln565_3_fu_5722_p1 <= tmp_V_42_reg_6579(32 - 1 downto 0);
    trunc_ln565_fu_594_p1 <= ireg_V_fu_564_p1(52 - 1 downto 0);
    trunc_ln5_fu_1342_p4 <= m_2_fu_1271_p2(52 downto 1);
    trunc_ln851_1_fu_1806_p1 <= x_new_V_23_fu_1781_p3(43 - 1 downto 0);
    trunc_ln851_2_fu_2664_p1 <= x_new_V_25_fu_2639_p3(43 - 1 downto 0);
    trunc_ln851_3_fu_3441_p1 <= x_new_V_27_fu_3416_p3(43 - 1 downto 0);
    trunc_ln851_4_fu_4299_p1 <= x_new_V_29_fu_4274_p3(43 - 1 downto 0);
    trunc_ln851_fu_1029_p1 <= x_new_V_21_fu_1004_p3(43 - 1 downto 0);
    trunc_ln893_10_fu_4491_p1 <= tmp_1_fu_4365_p3(11 - 1 downto 0);
    trunc_ln893_11_fu_5198_p1 <= tmp_10_fu_5072_p3(11 - 1 downto 0);
    trunc_ln893_1_fu_1580_p1 <= tmp_2_fu_1454_p3(11 - 1 downto 0);
    trunc_ln893_2_fu_1998_p1 <= tmp_3_fu_1872_p3(11 - 1 downto 0);
    trunc_ln893_3_fu_2357_p1 <= tmp_4_fu_2231_p3(11 - 1 downto 0);
    trunc_ln893_4_fu_4865_p1 <= tmp_5_fu_4739_p3(11 - 1 downto 0);
    trunc_ln893_5_fu_2856_p1 <= tmp_6_fu_2730_p3(11 - 1 downto 0);
    trunc_ln893_6_fu_3215_p1 <= tmp_7_fu_3089_p3(11 - 1 downto 0);
    trunc_ln893_7_fu_3633_p1 <= tmp_8_fu_3507_p3(11 - 1 downto 0);
    trunc_ln893_8_fu_3992_p1 <= tmp_9_fu_3866_p3(11 - 1 downto 0);
    trunc_ln893_9_fu_5039_p1 <= tmp_s_fu_4913_p3(11 - 1 downto 0);
    trunc_ln893_fu_1221_p1 <= tmp_fu_1095_p3(11 - 1 downto 0);
    trunc_ln897_10_fu_4405_p1 <= sub_ln894_10_fu_4377_p2(6 - 1 downto 0);
    trunc_ln897_11_fu_5112_p1 <= sub_ln894_11_fu_5084_p2(6 - 1 downto 0);
    trunc_ln897_1_fu_1494_p1 <= sub_ln894_1_fu_1466_p2(6 - 1 downto 0);
    trunc_ln897_2_fu_1912_p1 <= sub_ln894_2_fu_1884_p2(6 - 1 downto 0);
    trunc_ln897_3_fu_2271_p1 <= sub_ln894_3_fu_2243_p2(6 - 1 downto 0);
    trunc_ln897_4_fu_4779_p1 <= sub_ln894_4_fu_4751_p2(6 - 1 downto 0);
    trunc_ln897_5_fu_2770_p1 <= sub_ln894_5_fu_2742_p2(6 - 1 downto 0);
    trunc_ln897_6_fu_3129_p1 <= sub_ln894_6_fu_3101_p2(6 - 1 downto 0);
    trunc_ln897_7_fu_3547_p1 <= sub_ln894_7_fu_3519_p2(6 - 1 downto 0);
    trunc_ln897_8_fu_3906_p1 <= sub_ln894_8_fu_3878_p2(6 - 1 downto 0);
    trunc_ln897_9_fu_4953_p1 <= sub_ln894_9_fu_4925_p2(6 - 1 downto 0);
    trunc_ln897_fu_1135_p1 <= sub_ln894_fu_1107_p2(6 - 1 downto 0);
    trunc_ln924_10_fu_5597_p4 <= m_109_fu_5526_p2(52 downto 1);
    trunc_ln924_1_fu_1701_p4 <= m_24_fu_1630_p2(52 downto 1);
    trunc_ln924_2_fu_2119_p4 <= m_49_fu_2048_p2(52 downto 1);
    trunc_ln924_3_fu_2478_p4 <= m_61_fu_2407_p2(52 downto 1);
    trunc_ln924_4_fu_5319_p4 <= m_74_fu_5248_p2(52 downto 1);
    trunc_ln924_5_fu_2977_p4 <= m_79_fu_2906_p2(52 downto 1);
    trunc_ln924_6_fu_3336_p4 <= m_84_fu_3265_p2(52 downto 1);
    trunc_ln924_7_fu_3754_p4 <= m_89_fu_3683_p2(52 downto 1);
    trunc_ln924_8_fu_4113_p4 <= m_94_fu_4042_p2(52 downto 1);
    trunc_ln924_9_fu_5458_p4 <= m_99_fu_5387_p2(52 downto 1);
    trunc_ln924_s_fu_4612_p4 <= m_104_fu_4541_p2(52 downto 1);
    trunc_ln_fu_859_p4 <= add_ln39_fu_854_p2(31 downto 3);
    umax_fu_976_p3 <= 
        sub_ln86_fu_965_p2 when (empty_20_fu_971_p2(0) = '1') else 
        add_ln53_reg_5883;
    val_fu_5745_p2 <= (mask_reg_5889 and combined_fu_5739_p2);
    x_log_V_1_fu_698_p1 <= ashr_ln586_fu_692_p2(48 - 1 downto 0);
    x_log_V_2_fu_710_p3 <= 
        ap_const_lv48_FFFFFFFFFFFF when (tmp_38_fu_702_p3(0) = '1') else 
        ap_const_lv48_0;
    x_log_V_fu_672_p1 <= man_V_2_fu_616_p3(48 - 1 downto 0);
    x_log_iter0_V_fu_1750_p3 <= 
        tmp_V_37_reg_5995 when (and_ln924_3_fu_1744_p2(0) = '1') else 
        ap_const_lv48_40000000000;
    x_log_iter1_V_fu_2527_p3 <= 
        tmp_V_40_reg_6134 when (and_ln924_7_fu_2521_p2(0) = '1') else 
        ap_const_lv48_40000000000;
    x_log_iter2_V_fu_3385_p3 <= 
        tmp_V_45_reg_6280 when (and_ln924_13_fu_3379_p2(0) = '1') else 
        ap_const_lv48_40000000000;
    x_log_iter3_V_fu_4162_p3 <= 
        tmp_V_48_reg_6419 when (and_ln924_17_fu_4156_p2(0) = '1') else 
        ap_const_lv48_40000000000;
    x_log_iter4_V_fu_5700_p3 <= 
        tmp_V_53_reg_6565 when (and_ln924_23_fu_5694_p2(0) = '1') else 
        ap_const_lv48_40000000000;
    x_new_V_11_fu_3021_p2 <= std_logic_vector(unsigned(add_ln703_3_fu_3016_p2) - unsigned(shl_ln703_3_fu_3009_p3));
    x_new_V_15_fu_3798_p2 <= std_logic_vector(unsigned(add_ln703_4_fu_3793_p2) - unsigned(shl_ln703_4_fu_3786_p3));
    x_new_V_19_fu_4656_p2 <= std_logic_vector(unsigned(add_ln703_6_fu_4651_p2) - unsigned(shl_ln703_6_fu_4644_p3));
    x_new_V_21_fu_1004_p3 <= 
        grp_fu_558_p2 when (tmp_40_reg_5922(0) = '1') else 
        reg_554;
    x_new_V_23_fu_1781_p3 <= 
        grp_fu_558_p2 when (tmp_49_reg_6061(0) = '1') else 
        reg_554;
    x_new_V_25_fu_2639_p3 <= 
        grp_fu_558_p2 when (tmp_63_reg_6207(0) = '1') else 
        reg_554;
    x_new_V_27_fu_3416_p3 <= 
        grp_fu_558_p2 when (tmp_72_reg_6346(0) = '1') else 
        reg_554;
    x_new_V_29_fu_4274_p3 <= 
        grp_fu_558_p2 when (tmp_86_reg_6492(0) = '1') else 
        reg_554;
    x_new_V_3_fu_1386_p2 <= std_logic_vector(unsigned(add_ln703_fu_1381_p2) - unsigned(shl_ln_fu_1374_p3));
    x_new_V_7_fu_2163_p2 <= std_logic_vector(unsigned(add_ln703_1_fu_2158_p2) - unsigned(shl_ln703_1_fu_2151_p3));
    xor_ln571_fu_728_p2 <= (icmp_ln571_fu_624_p2 xor ap_const_lv1_1);
    xor_ln581_fu_782_p2 <= (or_ln581_fu_776_p2 xor ap_const_lv1_1);
    xor_ln582_fu_746_p2 <= (or_ln582_fu_740_p2 xor ap_const_lv1_1);
    xor_ln585_fu_764_p2 <= (icmp_ln585_fu_676_p2 xor ap_const_lv1_1);
    xor_ln82_fu_5733_p2 <= (I3_fu_5725_p3 xor I1_fu_5707_p1);
    xor_ln885_1_fu_2169_p2 <= (icmp_ln885_2_reg_6086 xor ap_const_lv1_1);
    xor_ln885_2_fu_3027_p2 <= (icmp_ln885_5_reg_6232 xor ap_const_lv1_1);
    xor_ln885_3_fu_3804_p2 <= (icmp_ln885_7_reg_6371 xor ap_const_lv1_1);
    xor_ln885_4_fu_4662_p2 <= (icmp_ln885_10_reg_6517 xor ap_const_lv1_1);
    xor_ln885_fu_1392_p2 <= (icmp_ln885_reg_5947 xor ap_const_lv1_1);
    xor_ln899_10_fu_4451_p2 <= (tmp_89_fu_4443_p3 xor ap_const_lv1_1);
    xor_ln899_11_fu_5158_p2 <= (tmp_93_fu_5150_p3 xor ap_const_lv1_1);
    xor_ln899_1_fu_1540_p2 <= (tmp_47_fu_1532_p3 xor ap_const_lv1_1);
    xor_ln899_2_fu_1958_p2 <= (tmp_52_fu_1950_p3 xor ap_const_lv1_1);
    xor_ln899_3_fu_2317_p2 <= (tmp_56_fu_2309_p3 xor ap_const_lv1_1);
    xor_ln899_4_fu_4825_p2 <= (tmp_61_fu_4817_p3 xor ap_const_lv1_1);
    xor_ln899_5_fu_2816_p2 <= (tmp_66_fu_2808_p3 xor ap_const_lv1_1);
    xor_ln899_6_fu_3175_p2 <= (tmp_70_fu_3167_p3 xor ap_const_lv1_1);
    xor_ln899_7_fu_3593_p2 <= (tmp_75_fu_3585_p3 xor ap_const_lv1_1);
    xor_ln899_8_fu_3952_p2 <= (tmp_79_fu_3944_p3 xor ap_const_lv1_1);
    xor_ln899_9_fu_4999_p2 <= (tmp_84_fu_4991_p3 xor ap_const_lv1_1);
    xor_ln899_fu_1181_p2 <= (tmp_43_fu_1173_p3 xor ap_const_lv1_1);
    xor_ln924_1_fu_2510_p2 <= (ap_const_lv1_1 xor and_ln924_6_fu_2504_p2);
    xor_ln924_2_fu_5629_p2 <= (ap_const_lv1_1 xor and_ln924_8_fu_5623_p2);
    xor_ln924_3_fu_3368_p2 <= (ap_const_lv1_1 xor and_ln924_12_fu_3362_p2);
    xor_ln924_4_fu_4145_p2 <= (ap_const_lv1_1 xor and_ln924_16_fu_4139_p2);
    xor_ln924_5_fu_5656_p2 <= (ap_const_lv1_1 xor and_ln924_18_fu_5650_p2);
    xor_ln924_6_fu_5683_p2 <= (ap_const_lv1_1 xor and_ln924_22_fu_5677_p2);
    xor_ln924_fu_1733_p2 <= (ap_const_lv1_1 xor and_ln924_2_fu_1727_p2);
    zext_ln39_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(total_bytes_to_send_fu_875_p3),32));
    zext_ln461_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_580_p4),12));
    zext_ln586_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_662_p1),54));
    zext_ln604_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_662_p1),48));
    zext_ln897_10_fu_4415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_10_fu_4409_p2),48));
    zext_ln897_11_fu_5122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_11_fu_5116_p2),48));
    zext_ln897_1_fu_1504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_1_fu_1498_p2),48));
    zext_ln897_2_fu_1922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_2_fu_1916_p2),48));
    zext_ln897_3_fu_2281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_3_fu_2275_p2),48));
    zext_ln897_4_fu_4789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_4_fu_4783_p2),48));
    zext_ln897_5_fu_2780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_5_fu_2774_p2),48));
    zext_ln897_6_fu_3139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_6_fu_3133_p2),48));
    zext_ln897_7_fu_3557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_7_fu_3551_p2),48));
    zext_ln897_8_fu_3916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_8_fu_3910_p2),48));
    zext_ln897_9_fu_4963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_9_fu_4957_p2),48));
    zext_ln897_fu_1145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_fu_1139_p2),48));
    zext_ln908_10_fu_2019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_2_fu_2014_p2),64));
    zext_ln908_11_fu_2886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_5_fu_2881_p2),64));
    zext_ln908_12_fu_2369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln908_3_fu_2364_p2),48));
    zext_ln908_13_fu_3245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_6_fu_3240_p2),64));
    zext_ln908_14_fu_2378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_3_fu_2373_p2),64));
    zext_ln908_15_fu_3663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_7_fu_3658_p2),64));
    zext_ln908_16_fu_5210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln908_4_fu_5205_p2),48));
    zext_ln908_17_fu_4022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_8_fu_4017_p2),64));
    zext_ln908_18_fu_5219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_4_fu_5214_p2),64));
    zext_ln908_19_fu_5367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_9_fu_5362_p2),64));
    zext_ln908_1_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_fu_1246_p2),64));
    zext_ln908_20_fu_2868_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln908_5_fu_2863_p2),48));
    zext_ln908_21_fu_4521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_10_fu_4516_p2),64));
    zext_ln908_22_fu_2877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_5_fu_2872_p2),64));
    zext_ln908_23_fu_5506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_11_fu_5501_p2),64));
    zext_ln908_24_fu_3227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln908_6_fu_3222_p2),48));
    zext_ln908_25_fu_3236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_6_fu_3231_p2),64));
    zext_ln908_26_fu_3645_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln908_7_fu_3640_p2),48));
    zext_ln908_27_fu_3654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_7_fu_3649_p2),64));
    zext_ln908_28_fu_4004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln908_8_fu_3999_p2),48));
    zext_ln908_29_fu_4013_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_8_fu_4008_p2),64));
    zext_ln908_2_fu_1242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_fu_1237_p2),64));
    zext_ln908_30_fu_5349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln908_9_fu_5344_p2),48));
    zext_ln908_31_fu_5358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_9_fu_5353_p2),64));
    zext_ln908_32_fu_4503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln908_10_fu_4498_p2),48));
    zext_ln908_33_fu_4512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_10_fu_4507_p2),64));
    zext_ln908_34_fu_5488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln908_11_fu_5483_p2),48));
    zext_ln908_35_fu_5497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_11_fu_5492_p2),64));
    zext_ln908_3_fu_1610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_1_fu_1605_p2),64));
    zext_ln908_4_fu_1592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln908_1_fu_1587_p2),48));
    zext_ln908_5_fu_2028_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_2_fu_2023_p2),64));
    zext_ln908_6_fu_1601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_1_fu_1596_p2),64));
    zext_ln908_7_fu_2387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_3_fu_2382_p2),64));
    zext_ln908_8_fu_2010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln908_2_fu_2005_p2),48));
    zext_ln908_9_fu_5228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_4_fu_5223_p2),64));
    zext_ln908_fu_1233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln908_fu_1228_p2),48));
    zext_ln911_10_fu_4538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln899_s_reg_6535),64));
    zext_ln911_11_fu_5523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln899_10_reg_6667),64));
    zext_ln911_1_fu_1627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln899_1_reg_6021),64));
    zext_ln911_2_fu_2045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln899_2_reg_6104),64));
    zext_ln911_3_fu_2404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln899_3_reg_6160),64));
    zext_ln911_4_fu_5245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln899_4_reg_6602),64));
    zext_ln911_5_fu_2903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln899_5_reg_6250),64));
    zext_ln911_6_fu_3262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln899_6_reg_6306),64));
    zext_ln911_7_fu_3680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln899_7_reg_6389),64));
    zext_ln911_8_fu_4039_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln899_8_reg_6445),64));
    zext_ln911_9_fu_5384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln899_9_reg_6640),64));
    zext_ln911_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_reg_5965),64));
end behav;
